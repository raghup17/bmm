// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.3
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ==============================================================

`timescale 1 ns / 1 ps
module bmm_top_top (
m_axi_b1_AWID,
m_axi_b1_AWADDR,
m_axi_b1_AWLEN,
m_axi_b1_AWSIZE,
m_axi_b1_AWBURST,
m_axi_b1_AWLOCK,
m_axi_b1_AWCACHE,
m_axi_b1_AWPROT,
m_axi_b1_AWQOS,
m_axi_b1_AWUSER,
m_axi_b1_AWVALID,
m_axi_b1_AWREADY,
m_axi_b1_WDATA,
m_axi_b1_WSTRB,
m_axi_b1_WLAST,
m_axi_b1_WUSER,
m_axi_b1_WVALID,
m_axi_b1_WREADY,
m_axi_b1_BID,
m_axi_b1_BRESP,
m_axi_b1_BUSER,
m_axi_b1_BVALID,
m_axi_b1_BREADY,
m_axi_b1_ARID,
m_axi_b1_ARADDR,
m_axi_b1_ARLEN,
m_axi_b1_ARSIZE,
m_axi_b1_ARBURST,
m_axi_b1_ARLOCK,
m_axi_b1_ARCACHE,
m_axi_b1_ARPROT,
m_axi_b1_ARQOS,
m_axi_b1_ARUSER,
m_axi_b1_ARVALID,
m_axi_b1_ARREADY,
m_axi_b1_RID,
m_axi_b1_RDATA,
m_axi_b1_RRESP,
m_axi_b1_RLAST,
m_axi_b1_RUSER,
m_axi_b1_RVALID,
m_axi_b1_RREADY,
m_axi_b2_AWID,
m_axi_b2_AWADDR,
m_axi_b2_AWLEN,
m_axi_b2_AWSIZE,
m_axi_b2_AWBURST,
m_axi_b2_AWLOCK,
m_axi_b2_AWCACHE,
m_axi_b2_AWPROT,
m_axi_b2_AWQOS,
m_axi_b2_AWUSER,
m_axi_b2_AWVALID,
m_axi_b2_AWREADY,
m_axi_b2_WDATA,
m_axi_b2_WSTRB,
m_axi_b2_WLAST,
m_axi_b2_WUSER,
m_axi_b2_WVALID,
m_axi_b2_WREADY,
m_axi_b2_BID,
m_axi_b2_BRESP,
m_axi_b2_BUSER,
m_axi_b2_BVALID,
m_axi_b2_BREADY,
m_axi_b2_ARID,
m_axi_b2_ARADDR,
m_axi_b2_ARLEN,
m_axi_b2_ARSIZE,
m_axi_b2_ARBURST,
m_axi_b2_ARLOCK,
m_axi_b2_ARCACHE,
m_axi_b2_ARPROT,
m_axi_b2_ARQOS,
m_axi_b2_ARUSER,
m_axi_b2_ARVALID,
m_axi_b2_ARREADY,
m_axi_b2_RID,
m_axi_b2_RDATA,
m_axi_b2_RRESP,
m_axi_b2_RLAST,
m_axi_b2_RUSER,
m_axi_b2_RVALID,
m_axi_b2_RREADY,
m_axi_b3_AWID,
m_axi_b3_AWADDR,
m_axi_b3_AWLEN,
m_axi_b3_AWSIZE,
m_axi_b3_AWBURST,
m_axi_b3_AWLOCK,
m_axi_b3_AWCACHE,
m_axi_b3_AWPROT,
m_axi_b3_AWQOS,
m_axi_b3_AWUSER,
m_axi_b3_AWVALID,
m_axi_b3_AWREADY,
m_axi_b3_WDATA,
m_axi_b3_WSTRB,
m_axi_b3_WLAST,
m_axi_b3_WUSER,
m_axi_b3_WVALID,
m_axi_b3_WREADY,
m_axi_b3_BID,
m_axi_b3_BRESP,
m_axi_b3_BUSER,
m_axi_b3_BVALID,
m_axi_b3_BREADY,
m_axi_b3_ARID,
m_axi_b3_ARADDR,
m_axi_b3_ARLEN,
m_axi_b3_ARSIZE,
m_axi_b3_ARBURST,
m_axi_b3_ARLOCK,
m_axi_b3_ARCACHE,
m_axi_b3_ARPROT,
m_axi_b3_ARQOS,
m_axi_b3_ARUSER,
m_axi_b3_ARVALID,
m_axi_b3_ARREADY,
m_axi_b3_RID,
m_axi_b3_RDATA,
m_axi_b3_RRESP,
m_axi_b3_RLAST,
m_axi_b3_RUSER,
m_axi_b3_RVALID,
m_axi_b3_RREADY,
s_axi_CONTROL_AWADDR,
s_axi_CONTROL_AWVALID,
s_axi_CONTROL_AWREADY,
s_axi_CONTROL_WDATA,
s_axi_CONTROL_WSTRB,
s_axi_CONTROL_WVALID,
s_axi_CONTROL_WREADY,
s_axi_CONTROL_BRESP,
s_axi_CONTROL_BVALID,
s_axi_CONTROL_BREADY,
s_axi_CONTROL_ARADDR,
s_axi_CONTROL_ARVALID,
s_axi_CONTROL_ARREADY,
s_axi_CONTROL_RDATA,
s_axi_CONTROL_RRESP,
s_axi_CONTROL_RVALID,
s_axi_CONTROL_RREADY,
interrupt,
aresetn,
aclk
);

parameter C_M_AXI_B1_ID_WIDTH = 1;
parameter C_M_AXI_B1_ADDR_WIDTH = 32;
parameter C_M_AXI_B1_DATA_WIDTH = 32;
parameter C_M_AXI_B1_AWUSER_WIDTH = 1;
parameter C_M_AXI_B1_ARUSER_WIDTH = 1;
parameter C_M_AXI_B1_WUSER_WIDTH = 1;
parameter C_M_AXI_B1_RUSER_WIDTH = 1;
parameter C_M_AXI_B1_BUSER_WIDTH = 1;
parameter C_M_AXI_B1_USER_DATA_WIDTH = 32;
parameter C_M_AXI_B1_TARGET_ADDR = 32'h00000000;
parameter C_M_AXI_B1_USER_VALUE = 1'b0;
parameter C_M_AXI_B1_PROT_VALUE = 3'b010;
parameter C_M_AXI_B1_CACHE_VALUE = 4'b0000;
parameter C_M_AXI_B2_ID_WIDTH = 1;
parameter C_M_AXI_B2_ADDR_WIDTH = 32;
parameter C_M_AXI_B2_DATA_WIDTH = 32;
parameter C_M_AXI_B2_AWUSER_WIDTH = 1;
parameter C_M_AXI_B2_ARUSER_WIDTH = 1;
parameter C_M_AXI_B2_WUSER_WIDTH = 1;
parameter C_M_AXI_B2_RUSER_WIDTH = 1;
parameter C_M_AXI_B2_BUSER_WIDTH = 1;
parameter C_M_AXI_B2_USER_DATA_WIDTH = 32;
parameter C_M_AXI_B2_TARGET_ADDR = 32'h00000000;
parameter C_M_AXI_B2_USER_VALUE = 1'b0;
parameter C_M_AXI_B2_PROT_VALUE = 3'b010;
parameter C_M_AXI_B2_CACHE_VALUE = 4'b0000;
parameter C_M_AXI_B3_ID_WIDTH = 1;
parameter C_M_AXI_B3_ADDR_WIDTH = 32;
parameter C_M_AXI_B3_DATA_WIDTH = 32;
parameter C_M_AXI_B3_AWUSER_WIDTH = 1;
parameter C_M_AXI_B3_ARUSER_WIDTH = 1;
parameter C_M_AXI_B3_WUSER_WIDTH = 1;
parameter C_M_AXI_B3_RUSER_WIDTH = 1;
parameter C_M_AXI_B3_BUSER_WIDTH = 1;
parameter C_M_AXI_B3_USER_DATA_WIDTH = 32;
parameter C_M_AXI_B3_TARGET_ADDR = 32'h00000000;
parameter C_M_AXI_B3_USER_VALUE = 1'b0;
parameter C_M_AXI_B3_PROT_VALUE = 3'b010;
parameter C_M_AXI_B3_CACHE_VALUE = 4'b0000;
parameter C_S_AXI_CONTROL_ADDR_WIDTH = 5;
parameter C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter RESET_ACTIVE_LOW = 1;

output [C_M_AXI_B1_ID_WIDTH - 1:0] m_axi_b1_AWID ;
output [C_M_AXI_B1_ADDR_WIDTH - 1:0] m_axi_b1_AWADDR ;
output [8 - 1:0] m_axi_b1_AWLEN ;
output [3 - 1:0] m_axi_b1_AWSIZE ;
output [2 - 1:0] m_axi_b1_AWBURST ;
output [2 - 1:0] m_axi_b1_AWLOCK ;
output [4 - 1:0] m_axi_b1_AWCACHE ;
output [3 - 1:0] m_axi_b1_AWPROT ;
output [4 - 1:0] m_axi_b1_AWQOS ;
output [C_M_AXI_B1_AWUSER_WIDTH - 1:0] m_axi_b1_AWUSER ;
output m_axi_b1_AWVALID ;
input m_axi_b1_AWREADY ;
output [C_M_AXI_B1_DATA_WIDTH - 1:0] m_axi_b1_WDATA ;
output [C_M_AXI_B1_DATA_WIDTH/8 - 1:0] m_axi_b1_WSTRB ;
output m_axi_b1_WLAST ;
output [C_M_AXI_B1_WUSER_WIDTH - 1:0] m_axi_b1_WUSER ;
output m_axi_b1_WVALID ;
input m_axi_b1_WREADY ;
input [C_M_AXI_B1_ID_WIDTH - 1:0] m_axi_b1_BID ;
input [2 - 1:0] m_axi_b1_BRESP ;
input [C_M_AXI_B1_BUSER_WIDTH - 1:0] m_axi_b1_BUSER ;
input m_axi_b1_BVALID ;
output m_axi_b1_BREADY ;
output [C_M_AXI_B1_ID_WIDTH - 1:0] m_axi_b1_ARID ;
output [C_M_AXI_B1_ADDR_WIDTH - 1:0] m_axi_b1_ARADDR ;
output [8 - 1:0] m_axi_b1_ARLEN ;
output [3 - 1:0] m_axi_b1_ARSIZE ;
output [2 - 1:0] m_axi_b1_ARBURST ;
output [2 - 1:0] m_axi_b1_ARLOCK ;
output [4 - 1:0] m_axi_b1_ARCACHE ;
output [3 - 1:0] m_axi_b1_ARPROT ;
output [4 - 1:0] m_axi_b1_ARQOS ;
output [C_M_AXI_B1_ARUSER_WIDTH - 1:0] m_axi_b1_ARUSER ;
output m_axi_b1_ARVALID ;
input m_axi_b1_ARREADY ;
input [C_M_AXI_B1_ID_WIDTH - 1:0] m_axi_b1_RID ;
input [C_M_AXI_B1_DATA_WIDTH - 1:0] m_axi_b1_RDATA ;
input [2 - 1:0] m_axi_b1_RRESP ;
input m_axi_b1_RLAST ;
input [C_M_AXI_B1_RUSER_WIDTH - 1:0] m_axi_b1_RUSER ;
input m_axi_b1_RVALID ;
output m_axi_b1_RREADY ;


output [C_M_AXI_B2_ID_WIDTH - 1:0] m_axi_b2_AWID ;
output [C_M_AXI_B2_ADDR_WIDTH - 1:0] m_axi_b2_AWADDR ;
output [8 - 1:0] m_axi_b2_AWLEN ;
output [3 - 1:0] m_axi_b2_AWSIZE ;
output [2 - 1:0] m_axi_b2_AWBURST ;
output [2 - 1:0] m_axi_b2_AWLOCK ;
output [4 - 1:0] m_axi_b2_AWCACHE ;
output [3 - 1:0] m_axi_b2_AWPROT ;
output [4 - 1:0] m_axi_b2_AWQOS ;
output [C_M_AXI_B2_AWUSER_WIDTH - 1:0] m_axi_b2_AWUSER ;
output m_axi_b2_AWVALID ;
input m_axi_b2_AWREADY ;
output [C_M_AXI_B2_DATA_WIDTH - 1:0] m_axi_b2_WDATA ;
output [C_M_AXI_B2_DATA_WIDTH/8 - 1:0] m_axi_b2_WSTRB ;
output m_axi_b2_WLAST ;
output [C_M_AXI_B2_WUSER_WIDTH - 1:0] m_axi_b2_WUSER ;
output m_axi_b2_WVALID ;
input m_axi_b2_WREADY ;
input [C_M_AXI_B2_ID_WIDTH - 1:0] m_axi_b2_BID ;
input [2 - 1:0] m_axi_b2_BRESP ;
input [C_M_AXI_B2_BUSER_WIDTH - 1:0] m_axi_b2_BUSER ;
input m_axi_b2_BVALID ;
output m_axi_b2_BREADY ;
output [C_M_AXI_B2_ID_WIDTH - 1:0] m_axi_b2_ARID ;
output [C_M_AXI_B2_ADDR_WIDTH - 1:0] m_axi_b2_ARADDR ;
output [8 - 1:0] m_axi_b2_ARLEN ;
output [3 - 1:0] m_axi_b2_ARSIZE ;
output [2 - 1:0] m_axi_b2_ARBURST ;
output [2 - 1:0] m_axi_b2_ARLOCK ;
output [4 - 1:0] m_axi_b2_ARCACHE ;
output [3 - 1:0] m_axi_b2_ARPROT ;
output [4 - 1:0] m_axi_b2_ARQOS ;
output [C_M_AXI_B2_ARUSER_WIDTH - 1:0] m_axi_b2_ARUSER ;
output m_axi_b2_ARVALID ;
input m_axi_b2_ARREADY ;
input [C_M_AXI_B2_ID_WIDTH - 1:0] m_axi_b2_RID ;
input [C_M_AXI_B2_DATA_WIDTH - 1:0] m_axi_b2_RDATA ;
input [2 - 1:0] m_axi_b2_RRESP ;
input m_axi_b2_RLAST ;
input [C_M_AXI_B2_RUSER_WIDTH - 1:0] m_axi_b2_RUSER ;
input m_axi_b2_RVALID ;
output m_axi_b2_RREADY ;


output [C_M_AXI_B3_ID_WIDTH - 1:0] m_axi_b3_AWID ;
output [C_M_AXI_B3_ADDR_WIDTH - 1:0] m_axi_b3_AWADDR ;
output [8 - 1:0] m_axi_b3_AWLEN ;
output [3 - 1:0] m_axi_b3_AWSIZE ;
output [2 - 1:0] m_axi_b3_AWBURST ;
output [2 - 1:0] m_axi_b3_AWLOCK ;
output [4 - 1:0] m_axi_b3_AWCACHE ;
output [3 - 1:0] m_axi_b3_AWPROT ;
output [4 - 1:0] m_axi_b3_AWQOS ;
output [C_M_AXI_B3_AWUSER_WIDTH - 1:0] m_axi_b3_AWUSER ;
output m_axi_b3_AWVALID ;
input m_axi_b3_AWREADY ;
output [C_M_AXI_B3_DATA_WIDTH - 1:0] m_axi_b3_WDATA ;
output [C_M_AXI_B3_DATA_WIDTH/8 - 1:0] m_axi_b3_WSTRB ;
output m_axi_b3_WLAST ;
output [C_M_AXI_B3_WUSER_WIDTH - 1:0] m_axi_b3_WUSER ;
output m_axi_b3_WVALID ;
input m_axi_b3_WREADY ;
input [C_M_AXI_B3_ID_WIDTH - 1:0] m_axi_b3_BID ;
input [2 - 1:0] m_axi_b3_BRESP ;
input [C_M_AXI_B3_BUSER_WIDTH - 1:0] m_axi_b3_BUSER ;
input m_axi_b3_BVALID ;
output m_axi_b3_BREADY ;
output [C_M_AXI_B3_ID_WIDTH - 1:0] m_axi_b3_ARID ;
output [C_M_AXI_B3_ADDR_WIDTH - 1:0] m_axi_b3_ARADDR ;
output [8 - 1:0] m_axi_b3_ARLEN ;
output [3 - 1:0] m_axi_b3_ARSIZE ;
output [2 - 1:0] m_axi_b3_ARBURST ;
output [2 - 1:0] m_axi_b3_ARLOCK ;
output [4 - 1:0] m_axi_b3_ARCACHE ;
output [3 - 1:0] m_axi_b3_ARPROT ;
output [4 - 1:0] m_axi_b3_ARQOS ;
output [C_M_AXI_B3_ARUSER_WIDTH - 1:0] m_axi_b3_ARUSER ;
output m_axi_b3_ARVALID ;
input m_axi_b3_ARREADY ;
input [C_M_AXI_B3_ID_WIDTH - 1:0] m_axi_b3_RID ;
input [C_M_AXI_B3_DATA_WIDTH - 1:0] m_axi_b3_RDATA ;
input [2 - 1:0] m_axi_b3_RRESP ;
input m_axi_b3_RLAST ;
input [C_M_AXI_B3_RUSER_WIDTH - 1:0] m_axi_b3_RUSER ;
input m_axi_b3_RVALID ;
output m_axi_b3_RREADY ;


input [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_CONTROL_AWADDR ;
input s_axi_CONTROL_AWVALID ;
output s_axi_CONTROL_AWREADY ;
input [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_CONTROL_WDATA ;
input [C_S_AXI_CONTROL_DATA_WIDTH/8 - 1:0] s_axi_CONTROL_WSTRB ;
input s_axi_CONTROL_WVALID ;
output s_axi_CONTROL_WREADY ;
output [2 - 1:0] s_axi_CONTROL_BRESP ;
output s_axi_CONTROL_BVALID ;
input s_axi_CONTROL_BREADY ;
input [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_CONTROL_ARADDR ;
input s_axi_CONTROL_ARVALID ;
output s_axi_CONTROL_ARREADY ;
output [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_CONTROL_RDATA ;
output [2 - 1:0] s_axi_CONTROL_RRESP ;
output s_axi_CONTROL_RVALID ;
input s_axi_CONTROL_RREADY ;
output interrupt ;

input aresetn ;

input aclk ;


wire [C_M_AXI_B1_ID_WIDTH - 1:0] m_axi_b1_AWID;
wire [C_M_AXI_B1_ADDR_WIDTH - 1:0] m_axi_b1_AWADDR;
wire [8 - 1:0] m_axi_b1_AWLEN;
wire [3 - 1:0] m_axi_b1_AWSIZE;
wire [2 - 1:0] m_axi_b1_AWBURST;
wire [2 - 1:0] m_axi_b1_AWLOCK;
wire [4 - 1:0] m_axi_b1_AWCACHE;
wire [3 - 1:0] m_axi_b1_AWPROT;
wire [4 - 1:0] m_axi_b1_AWQOS;
wire [C_M_AXI_B1_AWUSER_WIDTH - 1:0] m_axi_b1_AWUSER;
wire m_axi_b1_AWVALID;
wire m_axi_b1_AWREADY;
wire [C_M_AXI_B1_DATA_WIDTH - 1:0] m_axi_b1_WDATA;
wire [C_M_AXI_B1_DATA_WIDTH/8 - 1:0] m_axi_b1_WSTRB;
wire m_axi_b1_WLAST;
wire [C_M_AXI_B1_WUSER_WIDTH - 1:0] m_axi_b1_WUSER;
wire m_axi_b1_WVALID;
wire m_axi_b1_WREADY;
wire [C_M_AXI_B1_ID_WIDTH - 1:0] m_axi_b1_BID;
wire [2 - 1:0] m_axi_b1_BRESP;
wire [C_M_AXI_B1_BUSER_WIDTH - 1:0] m_axi_b1_BUSER;
wire m_axi_b1_BVALID;
wire m_axi_b1_BREADY;
wire [C_M_AXI_B1_ID_WIDTH - 1:0] m_axi_b1_ARID;
wire [C_M_AXI_B1_ADDR_WIDTH - 1:0] m_axi_b1_ARADDR;
wire [8 - 1:0] m_axi_b1_ARLEN;
wire [3 - 1:0] m_axi_b1_ARSIZE;
wire [2 - 1:0] m_axi_b1_ARBURST;
wire [2 - 1:0] m_axi_b1_ARLOCK;
wire [4 - 1:0] m_axi_b1_ARCACHE;
wire [3 - 1:0] m_axi_b1_ARPROT;
wire [4 - 1:0] m_axi_b1_ARQOS;
wire [C_M_AXI_B1_ARUSER_WIDTH - 1:0] m_axi_b1_ARUSER;
wire m_axi_b1_ARVALID;
wire m_axi_b1_ARREADY;
wire [C_M_AXI_B1_ID_WIDTH - 1:0] m_axi_b1_RID;
wire [C_M_AXI_B1_DATA_WIDTH - 1:0] m_axi_b1_RDATA;
wire [2 - 1:0] m_axi_b1_RRESP;
wire m_axi_b1_RLAST;
wire [C_M_AXI_B1_RUSER_WIDTH - 1:0] m_axi_b1_RUSER;
wire m_axi_b1_RVALID;
wire m_axi_b1_RREADY;


wire [C_M_AXI_B2_ID_WIDTH - 1:0] m_axi_b2_AWID;
wire [C_M_AXI_B2_ADDR_WIDTH - 1:0] m_axi_b2_AWADDR;
wire [8 - 1:0] m_axi_b2_AWLEN;
wire [3 - 1:0] m_axi_b2_AWSIZE;
wire [2 - 1:0] m_axi_b2_AWBURST;
wire [2 - 1:0] m_axi_b2_AWLOCK;
wire [4 - 1:0] m_axi_b2_AWCACHE;
wire [3 - 1:0] m_axi_b2_AWPROT;
wire [4 - 1:0] m_axi_b2_AWQOS;
wire [C_M_AXI_B2_AWUSER_WIDTH - 1:0] m_axi_b2_AWUSER;
wire m_axi_b2_AWVALID;
wire m_axi_b2_AWREADY;
wire [C_M_AXI_B2_DATA_WIDTH - 1:0] m_axi_b2_WDATA;
wire [C_M_AXI_B2_DATA_WIDTH/8 - 1:0] m_axi_b2_WSTRB;
wire m_axi_b2_WLAST;
wire [C_M_AXI_B2_WUSER_WIDTH - 1:0] m_axi_b2_WUSER;
wire m_axi_b2_WVALID;
wire m_axi_b2_WREADY;
wire [C_M_AXI_B2_ID_WIDTH - 1:0] m_axi_b2_BID;
wire [2 - 1:0] m_axi_b2_BRESP;
wire [C_M_AXI_B2_BUSER_WIDTH - 1:0] m_axi_b2_BUSER;
wire m_axi_b2_BVALID;
wire m_axi_b2_BREADY;
wire [C_M_AXI_B2_ID_WIDTH - 1:0] m_axi_b2_ARID;
wire [C_M_AXI_B2_ADDR_WIDTH - 1:0] m_axi_b2_ARADDR;
wire [8 - 1:0] m_axi_b2_ARLEN;
wire [3 - 1:0] m_axi_b2_ARSIZE;
wire [2 - 1:0] m_axi_b2_ARBURST;
wire [2 - 1:0] m_axi_b2_ARLOCK;
wire [4 - 1:0] m_axi_b2_ARCACHE;
wire [3 - 1:0] m_axi_b2_ARPROT;
wire [4 - 1:0] m_axi_b2_ARQOS;
wire [C_M_AXI_B2_ARUSER_WIDTH - 1:0] m_axi_b2_ARUSER;
wire m_axi_b2_ARVALID;
wire m_axi_b2_ARREADY;
wire [C_M_AXI_B2_ID_WIDTH - 1:0] m_axi_b2_RID;
wire [C_M_AXI_B2_DATA_WIDTH - 1:0] m_axi_b2_RDATA;
wire [2 - 1:0] m_axi_b2_RRESP;
wire m_axi_b2_RLAST;
wire [C_M_AXI_B2_RUSER_WIDTH - 1:0] m_axi_b2_RUSER;
wire m_axi_b2_RVALID;
wire m_axi_b2_RREADY;


wire [C_M_AXI_B3_ID_WIDTH - 1:0] m_axi_b3_AWID;
wire [C_M_AXI_B3_ADDR_WIDTH - 1:0] m_axi_b3_AWADDR;
wire [8 - 1:0] m_axi_b3_AWLEN;
wire [3 - 1:0] m_axi_b3_AWSIZE;
wire [2 - 1:0] m_axi_b3_AWBURST;
wire [2 - 1:0] m_axi_b3_AWLOCK;
wire [4 - 1:0] m_axi_b3_AWCACHE;
wire [3 - 1:0] m_axi_b3_AWPROT;
wire [4 - 1:0] m_axi_b3_AWQOS;
wire [C_M_AXI_B3_AWUSER_WIDTH - 1:0] m_axi_b3_AWUSER;
wire m_axi_b3_AWVALID;
wire m_axi_b3_AWREADY;
wire [C_M_AXI_B3_DATA_WIDTH - 1:0] m_axi_b3_WDATA;
wire [C_M_AXI_B3_DATA_WIDTH/8 - 1:0] m_axi_b3_WSTRB;
wire m_axi_b3_WLAST;
wire [C_M_AXI_B3_WUSER_WIDTH - 1:0] m_axi_b3_WUSER;
wire m_axi_b3_WVALID;
wire m_axi_b3_WREADY;
wire [C_M_AXI_B3_ID_WIDTH - 1:0] m_axi_b3_BID;
wire [2 - 1:0] m_axi_b3_BRESP;
wire [C_M_AXI_B3_BUSER_WIDTH - 1:0] m_axi_b3_BUSER;
wire m_axi_b3_BVALID;
wire m_axi_b3_BREADY;
wire [C_M_AXI_B3_ID_WIDTH - 1:0] m_axi_b3_ARID;
wire [C_M_AXI_B3_ADDR_WIDTH - 1:0] m_axi_b3_ARADDR;
wire [8 - 1:0] m_axi_b3_ARLEN;
wire [3 - 1:0] m_axi_b3_ARSIZE;
wire [2 - 1:0] m_axi_b3_ARBURST;
wire [2 - 1:0] m_axi_b3_ARLOCK;
wire [4 - 1:0] m_axi_b3_ARCACHE;
wire [3 - 1:0] m_axi_b3_ARPROT;
wire [4 - 1:0] m_axi_b3_ARQOS;
wire [C_M_AXI_B3_ARUSER_WIDTH - 1:0] m_axi_b3_ARUSER;
wire m_axi_b3_ARVALID;
wire m_axi_b3_ARREADY;
wire [C_M_AXI_B3_ID_WIDTH - 1:0] m_axi_b3_RID;
wire [C_M_AXI_B3_DATA_WIDTH - 1:0] m_axi_b3_RDATA;
wire [2 - 1:0] m_axi_b3_RRESP;
wire m_axi_b3_RLAST;
wire [C_M_AXI_B3_RUSER_WIDTH - 1:0] m_axi_b3_RUSER;
wire m_axi_b3_RVALID;
wire m_axi_b3_RREADY;


wire [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_CONTROL_AWADDR;
wire s_axi_CONTROL_AWVALID;
wire s_axi_CONTROL_AWREADY;
wire [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_CONTROL_WDATA;
wire [C_S_AXI_CONTROL_DATA_WIDTH/8 - 1:0] s_axi_CONTROL_WSTRB;
wire s_axi_CONTROL_WVALID;
wire s_axi_CONTROL_WREADY;
wire [2 - 1:0] s_axi_CONTROL_BRESP;
wire s_axi_CONTROL_BVALID;
wire s_axi_CONTROL_BREADY;
wire [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_CONTROL_ARADDR;
wire s_axi_CONTROL_ARVALID;
wire s_axi_CONTROL_ARREADY;
wire [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_CONTROL_RDATA;
wire [2 - 1:0] s_axi_CONTROL_RRESP;
wire s_axi_CONTROL_RVALID;
wire s_axi_CONTROL_RREADY;
wire interrupt;

wire aresetn;


wire [32 - 1:0] sig_bmm_top_b1_datain;
wire [32 - 1:0] sig_bmm_top_b1_dataout;
wire [32 - 1:0] sig_bmm_top_b1_address;
wire [32 - 1:0] sig_bmm_top_b1_size;
wire sig_bmm_top_b1_req_din;
wire sig_bmm_top_b1_req_full_n;
wire sig_bmm_top_b1_req_write;
wire sig_bmm_top_b1_rsp_empty_n;
wire sig_bmm_top_b1_rsp_read;

wire [32 - 1:0] sig_bmm_top_b2_datain;
wire [32 - 1:0] sig_bmm_top_b2_dataout;
wire [32 - 1:0] sig_bmm_top_b2_address;
wire [32 - 1:0] sig_bmm_top_b2_size;
wire sig_bmm_top_b2_req_din;
wire sig_bmm_top_b2_req_full_n;
wire sig_bmm_top_b2_req_write;
wire sig_bmm_top_b2_rsp_empty_n;
wire sig_bmm_top_b2_rsp_read;

wire [32 - 1:0] sig_bmm_top_b3_datain;
wire [32 - 1:0] sig_bmm_top_b3_dataout;
wire [32 - 1:0] sig_bmm_top_b3_address;
wire [32 - 1:0] sig_bmm_top_b3_size;
wire sig_bmm_top_b3_req_din;
wire sig_bmm_top_b3_req_full_n;
wire sig_bmm_top_b3_req_write;
wire sig_bmm_top_b3_rsp_empty_n;
wire sig_bmm_top_b3_rsp_read;

wire [32 - 1:0] sig_bmm_top_blockSize;
wire sig_bmm_top_blockSize_ap_vld;
wire sig_bmm_top_blockSize_ap_ack;
wire sig_bmm_top_ap_start;
wire sig_bmm_top_ap_ready;
wire sig_bmm_top_ap_done;
wire sig_bmm_top_ap_idle;

wire sig_bmm_top_ap_rst;



bmm_top bmm_top_U(
    .b1_datain(sig_bmm_top_b1_datain),
    .b1_dataout(sig_bmm_top_b1_dataout),
    .b1_address(sig_bmm_top_b1_address),
    .b1_size(sig_bmm_top_b1_size),
    .b1_req_din(sig_bmm_top_b1_req_din),
    .b1_req_full_n(sig_bmm_top_b1_req_full_n),
    .b1_req_write(sig_bmm_top_b1_req_write),
    .b1_rsp_empty_n(sig_bmm_top_b1_rsp_empty_n),
    .b1_rsp_read(sig_bmm_top_b1_rsp_read),
    .b2_datain(sig_bmm_top_b2_datain),
    .b2_dataout(sig_bmm_top_b2_dataout),
    .b2_address(sig_bmm_top_b2_address),
    .b2_size(sig_bmm_top_b2_size),
    .b2_req_din(sig_bmm_top_b2_req_din),
    .b2_req_full_n(sig_bmm_top_b2_req_full_n),
    .b2_req_write(sig_bmm_top_b2_req_write),
    .b2_rsp_empty_n(sig_bmm_top_b2_rsp_empty_n),
    .b2_rsp_read(sig_bmm_top_b2_rsp_read),
    .b3_datain(sig_bmm_top_b3_datain),
    .b3_dataout(sig_bmm_top_b3_dataout),
    .b3_address(sig_bmm_top_b3_address),
    .b3_size(sig_bmm_top_b3_size),
    .b3_req_din(sig_bmm_top_b3_req_din),
    .b3_req_full_n(sig_bmm_top_b3_req_full_n),
    .b3_req_write(sig_bmm_top_b3_req_write),
    .b3_rsp_empty_n(sig_bmm_top_b3_rsp_empty_n),
    .b3_rsp_read(sig_bmm_top_b3_rsp_read),
    .blockSize(sig_bmm_top_blockSize),
    .blockSize_ap_vld(sig_bmm_top_blockSize_ap_vld),
    .blockSize_ap_ack(sig_bmm_top_blockSize_ap_ack),
    .ap_start(sig_bmm_top_ap_start),
    .ap_ready(sig_bmm_top_ap_ready),
    .ap_done(sig_bmm_top_ap_done),
    .ap_idle(sig_bmm_top_ap_idle),
    .ap_rst(sig_bmm_top_ap_rst),
    .ap_clk(aclk)
);

bmm_top_b1_if #(
    .C_ID_WIDTH(C_M_AXI_B1_ID_WIDTH),
    .C_ADDR_WIDTH(C_M_AXI_B1_ADDR_WIDTH),
    .C_DATA_WIDTH(C_M_AXI_B1_DATA_WIDTH),
    .C_AWUSER_WIDTH(C_M_AXI_B1_AWUSER_WIDTH),
    .C_ARUSER_WIDTH(C_M_AXI_B1_ARUSER_WIDTH),
    .C_WUSER_WIDTH(C_M_AXI_B1_WUSER_WIDTH),
    .C_RUSER_WIDTH(C_M_AXI_B1_RUSER_WIDTH),
    .C_BUSER_WIDTH(C_M_AXI_B1_BUSER_WIDTH),
    .C_USER_DATA_WIDTH(C_M_AXI_B1_USER_DATA_WIDTH),
    .C_TARGET_ADDR(C_M_AXI_B1_TARGET_ADDR),
    .C_USER_VALUE(C_M_AXI_B1_USER_VALUE),
    .C_PROT_VALUE(C_M_AXI_B1_PROT_VALUE),
    .C_CACHE_VALUE(C_M_AXI_B1_CACHE_VALUE))
bmm_top_b1_if_U(
    .ACLK(aclk),
    .ARESETN(aresetn),
    .USER_datain(sig_bmm_top_b1_datain),
    .USER_dataout(sig_bmm_top_b1_dataout),
    .USER_address(sig_bmm_top_b1_address),
    .USER_size(sig_bmm_top_b1_size),
    .USER_req_din(sig_bmm_top_b1_req_din),
    .USER_req_full_n(sig_bmm_top_b1_req_full_n),
    .USER_req_write(sig_bmm_top_b1_req_write),
    .USER_rsp_empty_n(sig_bmm_top_b1_rsp_empty_n),
    .USER_rsp_read(sig_bmm_top_b1_rsp_read),
    .AWID(m_axi_b1_AWID),
    .AWADDR(m_axi_b1_AWADDR),
    .AWLEN(m_axi_b1_AWLEN),
    .AWSIZE(m_axi_b1_AWSIZE),
    .AWBURST(m_axi_b1_AWBURST),
    .AWLOCK(m_axi_b1_AWLOCK),
    .AWCACHE(m_axi_b1_AWCACHE),
    .AWPROT(m_axi_b1_AWPROT),
    .AWQOS(m_axi_b1_AWQOS),
    .AWUSER(m_axi_b1_AWUSER),
    .AWVALID(m_axi_b1_AWVALID),
    .AWREADY(m_axi_b1_AWREADY),
    .WDATA(m_axi_b1_WDATA),
    .WSTRB(m_axi_b1_WSTRB),
    .WLAST(m_axi_b1_WLAST),
    .WUSER(m_axi_b1_WUSER),
    .WVALID(m_axi_b1_WVALID),
    .WREADY(m_axi_b1_WREADY),
    .BID(m_axi_b1_BID),
    .BRESP(m_axi_b1_BRESP),
    .BUSER(m_axi_b1_BUSER),
    .BVALID(m_axi_b1_BVALID),
    .BREADY(m_axi_b1_BREADY),
    .ARID(m_axi_b1_ARID),
    .ARADDR(m_axi_b1_ARADDR),
    .ARLEN(m_axi_b1_ARLEN),
    .ARSIZE(m_axi_b1_ARSIZE),
    .ARBURST(m_axi_b1_ARBURST),
    .ARLOCK(m_axi_b1_ARLOCK),
    .ARCACHE(m_axi_b1_ARCACHE),
    .ARPROT(m_axi_b1_ARPROT),
    .ARQOS(m_axi_b1_ARQOS),
    .ARUSER(m_axi_b1_ARUSER),
    .ARVALID(m_axi_b1_ARVALID),
    .ARREADY(m_axi_b1_ARREADY),
    .RID(m_axi_b1_RID),
    .RDATA(m_axi_b1_RDATA),
    .RRESP(m_axi_b1_RRESP),
    .RLAST(m_axi_b1_RLAST),
    .RUSER(m_axi_b1_RUSER),
    .RVALID(m_axi_b1_RVALID),
    .RREADY(m_axi_b1_RREADY));

bmm_top_b2_if #(
    .C_ID_WIDTH(C_M_AXI_B2_ID_WIDTH),
    .C_ADDR_WIDTH(C_M_AXI_B2_ADDR_WIDTH),
    .C_DATA_WIDTH(C_M_AXI_B2_DATA_WIDTH),
    .C_AWUSER_WIDTH(C_M_AXI_B2_AWUSER_WIDTH),
    .C_ARUSER_WIDTH(C_M_AXI_B2_ARUSER_WIDTH),
    .C_WUSER_WIDTH(C_M_AXI_B2_WUSER_WIDTH),
    .C_RUSER_WIDTH(C_M_AXI_B2_RUSER_WIDTH),
    .C_BUSER_WIDTH(C_M_AXI_B2_BUSER_WIDTH),
    .C_USER_DATA_WIDTH(C_M_AXI_B2_USER_DATA_WIDTH),
    .C_TARGET_ADDR(C_M_AXI_B2_TARGET_ADDR),
    .C_USER_VALUE(C_M_AXI_B2_USER_VALUE),
    .C_PROT_VALUE(C_M_AXI_B2_PROT_VALUE),
    .C_CACHE_VALUE(C_M_AXI_B2_CACHE_VALUE))
bmm_top_b2_if_U(
    .ACLK(aclk),
    .ARESETN(aresetn),
    .USER_datain(sig_bmm_top_b2_datain),
    .USER_dataout(sig_bmm_top_b2_dataout),
    .USER_address(sig_bmm_top_b2_address),
    .USER_size(sig_bmm_top_b2_size),
    .USER_req_din(sig_bmm_top_b2_req_din),
    .USER_req_full_n(sig_bmm_top_b2_req_full_n),
    .USER_req_write(sig_bmm_top_b2_req_write),
    .USER_rsp_empty_n(sig_bmm_top_b2_rsp_empty_n),
    .USER_rsp_read(sig_bmm_top_b2_rsp_read),
    .AWID(m_axi_b2_AWID),
    .AWADDR(m_axi_b2_AWADDR),
    .AWLEN(m_axi_b2_AWLEN),
    .AWSIZE(m_axi_b2_AWSIZE),
    .AWBURST(m_axi_b2_AWBURST),
    .AWLOCK(m_axi_b2_AWLOCK),
    .AWCACHE(m_axi_b2_AWCACHE),
    .AWPROT(m_axi_b2_AWPROT),
    .AWQOS(m_axi_b2_AWQOS),
    .AWUSER(m_axi_b2_AWUSER),
    .AWVALID(m_axi_b2_AWVALID),
    .AWREADY(m_axi_b2_AWREADY),
    .WDATA(m_axi_b2_WDATA),
    .WSTRB(m_axi_b2_WSTRB),
    .WLAST(m_axi_b2_WLAST),
    .WUSER(m_axi_b2_WUSER),
    .WVALID(m_axi_b2_WVALID),
    .WREADY(m_axi_b2_WREADY),
    .BID(m_axi_b2_BID),
    .BRESP(m_axi_b2_BRESP),
    .BUSER(m_axi_b2_BUSER),
    .BVALID(m_axi_b2_BVALID),
    .BREADY(m_axi_b2_BREADY),
    .ARID(m_axi_b2_ARID),
    .ARADDR(m_axi_b2_ARADDR),
    .ARLEN(m_axi_b2_ARLEN),
    .ARSIZE(m_axi_b2_ARSIZE),
    .ARBURST(m_axi_b2_ARBURST),
    .ARLOCK(m_axi_b2_ARLOCK),
    .ARCACHE(m_axi_b2_ARCACHE),
    .ARPROT(m_axi_b2_ARPROT),
    .ARQOS(m_axi_b2_ARQOS),
    .ARUSER(m_axi_b2_ARUSER),
    .ARVALID(m_axi_b2_ARVALID),
    .ARREADY(m_axi_b2_ARREADY),
    .RID(m_axi_b2_RID),
    .RDATA(m_axi_b2_RDATA),
    .RRESP(m_axi_b2_RRESP),
    .RLAST(m_axi_b2_RLAST),
    .RUSER(m_axi_b2_RUSER),
    .RVALID(m_axi_b2_RVALID),
    .RREADY(m_axi_b2_RREADY));

bmm_top_b3_if #(
    .C_ID_WIDTH(C_M_AXI_B3_ID_WIDTH),
    .C_ADDR_WIDTH(C_M_AXI_B3_ADDR_WIDTH),
    .C_DATA_WIDTH(C_M_AXI_B3_DATA_WIDTH),
    .C_AWUSER_WIDTH(C_M_AXI_B3_AWUSER_WIDTH),
    .C_ARUSER_WIDTH(C_M_AXI_B3_ARUSER_WIDTH),
    .C_WUSER_WIDTH(C_M_AXI_B3_WUSER_WIDTH),
    .C_RUSER_WIDTH(C_M_AXI_B3_RUSER_WIDTH),
    .C_BUSER_WIDTH(C_M_AXI_B3_BUSER_WIDTH),
    .C_USER_DATA_WIDTH(C_M_AXI_B3_USER_DATA_WIDTH),
    .C_TARGET_ADDR(C_M_AXI_B3_TARGET_ADDR),
    .C_USER_VALUE(C_M_AXI_B3_USER_VALUE),
    .C_PROT_VALUE(C_M_AXI_B3_PROT_VALUE),
    .C_CACHE_VALUE(C_M_AXI_B3_CACHE_VALUE))
bmm_top_b3_if_U(
    .ACLK(aclk),
    .ARESETN(aresetn),
    .USER_datain(sig_bmm_top_b3_datain),
    .USER_dataout(sig_bmm_top_b3_dataout),
    .USER_address(sig_bmm_top_b3_address),
    .USER_size(sig_bmm_top_b3_size),
    .USER_req_din(sig_bmm_top_b3_req_din),
    .USER_req_full_n(sig_bmm_top_b3_req_full_n),
    .USER_req_write(sig_bmm_top_b3_req_write),
    .USER_rsp_empty_n(sig_bmm_top_b3_rsp_empty_n),
    .USER_rsp_read(sig_bmm_top_b3_rsp_read),
    .AWID(m_axi_b3_AWID),
    .AWADDR(m_axi_b3_AWADDR),
    .AWLEN(m_axi_b3_AWLEN),
    .AWSIZE(m_axi_b3_AWSIZE),
    .AWBURST(m_axi_b3_AWBURST),
    .AWLOCK(m_axi_b3_AWLOCK),
    .AWCACHE(m_axi_b3_AWCACHE),
    .AWPROT(m_axi_b3_AWPROT),
    .AWQOS(m_axi_b3_AWQOS),
    .AWUSER(m_axi_b3_AWUSER),
    .AWVALID(m_axi_b3_AWVALID),
    .AWREADY(m_axi_b3_AWREADY),
    .WDATA(m_axi_b3_WDATA),
    .WSTRB(m_axi_b3_WSTRB),
    .WLAST(m_axi_b3_WLAST),
    .WUSER(m_axi_b3_WUSER),
    .WVALID(m_axi_b3_WVALID),
    .WREADY(m_axi_b3_WREADY),
    .BID(m_axi_b3_BID),
    .BRESP(m_axi_b3_BRESP),
    .BUSER(m_axi_b3_BUSER),
    .BVALID(m_axi_b3_BVALID),
    .BREADY(m_axi_b3_BREADY),
    .ARID(m_axi_b3_ARID),
    .ARADDR(m_axi_b3_ARADDR),
    .ARLEN(m_axi_b3_ARLEN),
    .ARSIZE(m_axi_b3_ARSIZE),
    .ARBURST(m_axi_b3_ARBURST),
    .ARLOCK(m_axi_b3_ARLOCK),
    .ARCACHE(m_axi_b3_ARCACHE),
    .ARPROT(m_axi_b3_ARPROT),
    .ARQOS(m_axi_b3_ARQOS),
    .ARUSER(m_axi_b3_ARUSER),
    .ARVALID(m_axi_b3_ARVALID),
    .ARREADY(m_axi_b3_ARREADY),
    .RID(m_axi_b3_RID),
    .RDATA(m_axi_b3_RDATA),
    .RRESP(m_axi_b3_RRESP),
    .RLAST(m_axi_b3_RLAST),
    .RUSER(m_axi_b3_RUSER),
    .RVALID(m_axi_b3_RVALID),
    .RREADY(m_axi_b3_RREADY));

bmm_top_CONTROL_if #(
    .C_ADDR_WIDTH(C_S_AXI_CONTROL_ADDR_WIDTH),
    .C_DATA_WIDTH(C_S_AXI_CONTROL_DATA_WIDTH))
bmm_top_CONTROL_if_U(
    .ACLK(aclk),
    .ARESETN(aresetn),
    .I_blockSize(sig_bmm_top_blockSize),
    .I_blockSize_ap_vld(sig_bmm_top_blockSize_ap_vld),
    .I_blockSize_ap_ack(sig_bmm_top_blockSize_ap_ack),
    .I_ap_start(sig_bmm_top_ap_start),
    .O_ap_ready(sig_bmm_top_ap_ready),
    .O_ap_done(sig_bmm_top_ap_done),
    .O_ap_idle(sig_bmm_top_ap_idle),
    .AWADDR(s_axi_CONTROL_AWADDR),
    .AWVALID(s_axi_CONTROL_AWVALID),
    .AWREADY(s_axi_CONTROL_AWREADY),
    .WDATA(s_axi_CONTROL_WDATA),
    .WSTRB(s_axi_CONTROL_WSTRB),
    .WVALID(s_axi_CONTROL_WVALID),
    .WREADY(s_axi_CONTROL_WREADY),
    .BRESP(s_axi_CONTROL_BRESP),
    .BVALID(s_axi_CONTROL_BVALID),
    .BREADY(s_axi_CONTROL_BREADY),
    .ARADDR(s_axi_CONTROL_ARADDR),
    .ARVALID(s_axi_CONTROL_ARVALID),
    .ARREADY(s_axi_CONTROL_ARREADY),
    .RDATA(s_axi_CONTROL_RDATA),
    .RRESP(s_axi_CONTROL_RRESP),
    .RVALID(s_axi_CONTROL_RVALID),
    .RREADY(s_axi_CONTROL_RREADY),
    .interrupt(interrupt));

bmm_top_ap_rst_if #(
    .RESET_ACTIVE_LOW(RESET_ACTIVE_LOW))
ap_rst_if_U(
    .dout(sig_bmm_top_ap_rst),
    .din(aresetn));

endmodule
