// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.3
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="bmm_top,hls_ip_2013_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z045ffg900-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}" *)

module bmm_top (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        b1_req_din,
        b1_req_full_n,
        b1_req_write,
        b1_rsp_empty_n,
        b1_rsp_read,
        b1_address,
        b1_datain,
        b1_dataout,
        b1_size,
        b2_req_din,
        b2_req_full_n,
        b2_req_write,
        b2_rsp_empty_n,
        b2_rsp_read,
        b2_address,
        b2_datain,
        b2_dataout,
        b2_size,
        b3_req_din,
        b3_req_full_n,
        b3_req_write,
        b3_rsp_empty_n,
        b3_rsp_read,
        b3_address,
        b3_datain,
        b3_dataout,
        b3_size,
        blockSize,
        blockSize_ap_vld,
        blockSize_ap_ack
);

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   b1_req_din;
input   b1_req_full_n;
output   b1_req_write;
input   b1_rsp_empty_n;
output   b1_rsp_read;
output  [31:0] b1_address;
input  [255:0] b1_datain;
output  [255:0] b1_dataout;
output  [31:0] b1_size;
output   b2_req_din;
input   b2_req_full_n;
output   b2_req_write;
input   b2_rsp_empty_n;
output   b2_rsp_read;
output  [31:0] b2_address;
input  [255:0] b2_datain;
output  [255:0] b2_dataout;
output  [31:0] b2_size;
output   b3_req_din;
input   b3_req_full_n;
output   b3_req_write;
input   b3_rsp_empty_n;
output   b3_rsp_read;
output  [31:0] b3_address;
input  [255:0] b3_datain;
output  [255:0] b3_dataout;
output  [31:0] b3_size;
input  [31:0] blockSize;
input   blockSize_ap_vld;
output   blockSize_ap_ack;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg b1_req_din;
reg b1_req_write;
reg b1_rsp_read;
reg[31:0] b1_address;
reg[255:0] b1_dataout;
reg b2_req_din;
reg b2_req_write;
reg b2_rsp_read;
reg[31:0] b2_address;
reg[255:0] b2_dataout;
reg b3_req_din;
reg b3_req_write;
reg b3_rsp_read;
reg[31:0] b3_address;
reg[255:0] b3_dataout;
reg blockSize_ap_ack;
reg   [3:0] ap_CS_fsm = 4'b0000;
reg    ap_sig_bdd_76;
wire   [31:0] tmp_fu_159_p2;
reg   [31:0] tmp_reg_301;
wire   [31:0] tmp_2_fu_177_p2;
reg   [31:0] tmp_2_reg_306;
wire   [31:0] tmp_4_fu_189_p2;
reg   [31:0] tmp_4_reg_311;
reg   [28:0] tmp_s_reg_316;
wire   [28:0] i_1_fu_228_p2;
reg   [28:0] i_1_reg_325;
wire   [0:0] exitcond1_fu_223_p2;
wire   [28:0] i_2_fu_264_p2;
wire   [0:0] exitcond_fu_259_p2;
reg    ap_sig_bdd_114;
reg   [28:0] i_reg_124;
reg    ap_sig_bdd_126;
reg   [28:0] i5_reg_135;
wire   [63:0] tmp_8_fu_234_p1;
wire   [63:0] tmp_9_fu_270_p1;
reg    ap_sig_bdd_144;
wire   [255:0] tmp_1_fu_201_p1;
wire   [255:0] tmp_3_fu_205_p1;
wire   [255:0] tmp_5_fu_209_p1;
wire   [31:0] tmp_7_fu_147_p0;
wire   [31:0] tmp_10_fu_153_p0;
wire   [31:0] tmp_7_fu_147_p2;
wire   [31:0] tmp_10_fu_153_p2;
wire   [31:0] tmp_11_fu_165_p0;
wire   [31:0] tmp_12_fu_171_p0;
wire   [31:0] tmp_11_fu_165_p2;
wire   [31:0] tmp_12_fu_171_p2;
wire   [31:0] tmp_13_fu_183_p0;
wire   [31:0] tmp_13_fu_183_p2;
wire   [31:0] grp_fu_195_p0;
wire   [31:0] grp_fu_195_p1;
wire   [31:0] grp_fu_195_p2;
reg    grp_fu_195_ce;
reg   [3:0] ap_NS_fsm;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 4'b0000;
parameter    ap_ST_st2_fsm_1 = 4'b1;
parameter    ap_ST_st3_fsm_2 = 4'b10;
parameter    ap_ST_st4_fsm_3 = 4'b11;
parameter    ap_ST_st5_fsm_4 = 4'b100;
parameter    ap_ST_st6_fsm_5 = 4'b101;
parameter    ap_ST_st7_fsm_6 = 4'b110;
parameter    ap_ST_st8_fsm_7 = 4'b111;
parameter    ap_ST_st9_fsm_8 = 4'b1000;
parameter    ap_ST_st10_fsm_9 = 4'b1001;
parameter    ap_ST_st11_fsm_10 = 4'b1010;
parameter    ap_ST_st12_fsm_11 = 4'b1011;
parameter    ap_ST_st13_fsm_12 = 4'b1100;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv29_0 = 29'b00000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv256_lc_1 = 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv29_1 = 29'b1;
parameter    ap_true = 1'b1;


bmm_top_mul_32s_32s_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
bmm_top_mul_32s_32s_32_6_U1(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_195_p0 ),
    .din1( grp_fu_195_p1 ),
    .ce( grp_fu_195_ce ),
    .dout( grp_fu_195_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st7_fsm_6 == ap_CS_fsm) & ~(exitcond1_fu_223_p2 == ap_const_lv1_0))) begin
        i5_reg_135 <= ap_const_lv29_0;
    end else if (((ap_ST_st13_fsm_12 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond_fu_259_p2) & ~ap_sig_bdd_114)) begin
        i5_reg_135 <= i_2_fu_264_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st12_fsm_11 == ap_CS_fsm) & ~ap_sig_bdd_126)) begin
        i_reg_124 <= i_1_reg_325;
    end else if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        i_reg_124 <= ap_const_lv29_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st7_fsm_6 == ap_CS_fsm)) begin
        i_1_reg_325 <= i_1_fu_228_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~ap_sig_bdd_76)) begin
        tmp_2_reg_306[2] <= tmp_2_fu_177_p2[2];
tmp_2_reg_306[3] <= tmp_2_fu_177_p2[3];
tmp_2_reg_306[4] <= tmp_2_fu_177_p2[4];
tmp_2_reg_306[5] <= tmp_2_fu_177_p2[5];
tmp_2_reg_306[6] <= tmp_2_fu_177_p2[6];
tmp_2_reg_306[7] <= tmp_2_fu_177_p2[7];
tmp_2_reg_306[8] <= tmp_2_fu_177_p2[8];
tmp_2_reg_306[9] <= tmp_2_fu_177_p2[9];
tmp_2_reg_306[10] <= tmp_2_fu_177_p2[10];
tmp_2_reg_306[11] <= tmp_2_fu_177_p2[11];
tmp_2_reg_306[12] <= tmp_2_fu_177_p2[12];
tmp_2_reg_306[13] <= tmp_2_fu_177_p2[13];
tmp_2_reg_306[14] <= tmp_2_fu_177_p2[14];
tmp_2_reg_306[15] <= tmp_2_fu_177_p2[15];
tmp_2_reg_306[16] <= tmp_2_fu_177_p2[16];
tmp_2_reg_306[17] <= tmp_2_fu_177_p2[17];
tmp_2_reg_306[18] <= tmp_2_fu_177_p2[18];
tmp_2_reg_306[19] <= tmp_2_fu_177_p2[19];
tmp_2_reg_306[20] <= tmp_2_fu_177_p2[20];
tmp_2_reg_306[21] <= tmp_2_fu_177_p2[21];
tmp_2_reg_306[22] <= tmp_2_fu_177_p2[22];
tmp_2_reg_306[23] <= tmp_2_fu_177_p2[23];
tmp_2_reg_306[24] <= tmp_2_fu_177_p2[24];
tmp_2_reg_306[25] <= tmp_2_fu_177_p2[25];
tmp_2_reg_306[26] <= tmp_2_fu_177_p2[26];
tmp_2_reg_306[27] <= tmp_2_fu_177_p2[27];
tmp_2_reg_306[28] <= tmp_2_fu_177_p2[28];
tmp_2_reg_306[29] <= tmp_2_fu_177_p2[29];
tmp_2_reg_306[30] <= tmp_2_fu_177_p2[30];
tmp_2_reg_306[31] <= tmp_2_fu_177_p2[31];
        tmp_4_reg_311[1] <= tmp_4_fu_189_p2[1];
tmp_4_reg_311[2] <= tmp_4_fu_189_p2[2];
tmp_4_reg_311[3] <= tmp_4_fu_189_p2[3];
tmp_4_reg_311[4] <= tmp_4_fu_189_p2[4];
tmp_4_reg_311[5] <= tmp_4_fu_189_p2[5];
tmp_4_reg_311[6] <= tmp_4_fu_189_p2[6];
tmp_4_reg_311[7] <= tmp_4_fu_189_p2[7];
tmp_4_reg_311[8] <= tmp_4_fu_189_p2[8];
tmp_4_reg_311[9] <= tmp_4_fu_189_p2[9];
tmp_4_reg_311[10] <= tmp_4_fu_189_p2[10];
tmp_4_reg_311[11] <= tmp_4_fu_189_p2[11];
tmp_4_reg_311[12] <= tmp_4_fu_189_p2[12];
tmp_4_reg_311[13] <= tmp_4_fu_189_p2[13];
tmp_4_reg_311[14] <= tmp_4_fu_189_p2[14];
tmp_4_reg_311[15] <= tmp_4_fu_189_p2[15];
tmp_4_reg_311[16] <= tmp_4_fu_189_p2[16];
tmp_4_reg_311[17] <= tmp_4_fu_189_p2[17];
tmp_4_reg_311[18] <= tmp_4_fu_189_p2[18];
tmp_4_reg_311[19] <= tmp_4_fu_189_p2[19];
tmp_4_reg_311[20] <= tmp_4_fu_189_p2[20];
tmp_4_reg_311[21] <= tmp_4_fu_189_p2[21];
tmp_4_reg_311[22] <= tmp_4_fu_189_p2[22];
tmp_4_reg_311[23] <= tmp_4_fu_189_p2[23];
tmp_4_reg_311[24] <= tmp_4_fu_189_p2[24];
tmp_4_reg_311[25] <= tmp_4_fu_189_p2[25];
tmp_4_reg_311[26] <= tmp_4_fu_189_p2[26];
tmp_4_reg_311[27] <= tmp_4_fu_189_p2[27];
tmp_4_reg_311[28] <= tmp_4_fu_189_p2[28];
tmp_4_reg_311[29] <= tmp_4_fu_189_p2[29];
tmp_4_reg_311[30] <= tmp_4_fu_189_p2[30];
tmp_4_reg_311[31] <= tmp_4_fu_189_p2[31];
        tmp_reg_301[1] <= tmp_fu_159_p2[1];
tmp_reg_301[2] <= tmp_fu_159_p2[2];
tmp_reg_301[3] <= tmp_fu_159_p2[3];
tmp_reg_301[4] <= tmp_fu_159_p2[4];
tmp_reg_301[5] <= tmp_fu_159_p2[5];
tmp_reg_301[6] <= tmp_fu_159_p2[6];
tmp_reg_301[7] <= tmp_fu_159_p2[7];
tmp_reg_301[8] <= tmp_fu_159_p2[8];
tmp_reg_301[9] <= tmp_fu_159_p2[9];
tmp_reg_301[10] <= tmp_fu_159_p2[10];
tmp_reg_301[11] <= tmp_fu_159_p2[11];
tmp_reg_301[12] <= tmp_fu_159_p2[12];
tmp_reg_301[13] <= tmp_fu_159_p2[13];
tmp_reg_301[14] <= tmp_fu_159_p2[14];
tmp_reg_301[15] <= tmp_fu_159_p2[15];
tmp_reg_301[16] <= tmp_fu_159_p2[16];
tmp_reg_301[17] <= tmp_fu_159_p2[17];
tmp_reg_301[18] <= tmp_fu_159_p2[18];
tmp_reg_301[19] <= tmp_fu_159_p2[19];
tmp_reg_301[20] <= tmp_fu_159_p2[20];
tmp_reg_301[21] <= tmp_fu_159_p2[21];
tmp_reg_301[22] <= tmp_fu_159_p2[22];
tmp_reg_301[23] <= tmp_fu_159_p2[23];
tmp_reg_301[24] <= tmp_fu_159_p2[24];
tmp_reg_301[25] <= tmp_fu_159_p2[25];
tmp_reg_301[26] <= tmp_fu_159_p2[26];
tmp_reg_301[27] <= tmp_fu_159_p2[27];
tmp_reg_301[28] <= tmp_fu_159_p2[28];
tmp_reg_301[29] <= tmp_fu_159_p2[29];
tmp_reg_301[30] <= tmp_fu_159_p2[30];
tmp_reg_301[31] <= tmp_fu_159_p2[31];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        tmp_s_reg_316 <= {{grp_fu_195_p2[ap_const_lv32_1F : ap_const_lv32_3]}};
    end
end

/// ap_done assign process. ///
always @ (ap_CS_fsm or exitcond_fu_259_p2 or ap_sig_bdd_114)
begin
    if (((ap_ST_st13_fsm_12 == ap_CS_fsm) & ~ap_sig_bdd_114 & ~(ap_const_lv1_0 == exitcond_fu_259_p2))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm or exitcond_fu_259_p2 or ap_sig_bdd_114)
begin
    if (((ap_ST_st13_fsm_12 == ap_CS_fsm) & ~ap_sig_bdd_114 & ~(ap_const_lv1_0 == exitcond_fu_259_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// b1_address assign process. ///
always @ (ap_CS_fsm or exitcond1_fu_223_p2 or exitcond_fu_259_p2 or ap_sig_bdd_114 or tmp_8_fu_234_p1 or tmp_9_fu_270_p1 or ap_sig_bdd_144)
begin
    if (((ap_ST_st13_fsm_12 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond_fu_259_p2) & ~ap_sig_bdd_114)) begin
        b1_address = tmp_9_fu_270_p1;
    end else if (((ap_ST_st7_fsm_6 == ap_CS_fsm) & (exitcond1_fu_223_p2 == ap_const_lv1_0))) begin
        b1_address = tmp_8_fu_234_p1;
    end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~ap_sig_bdd_144)) begin
        b1_address = ap_const_lv32_0;
    end else begin
        b1_address = 'bx;
    end
end

/// b1_dataout assign process. ///
always @ (ap_CS_fsm or exitcond_fu_259_p2 or ap_sig_bdd_114 or ap_sig_bdd_144 or tmp_1_fu_201_p1)
begin
    if (((ap_ST_st13_fsm_12 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond_fu_259_p2) & ~ap_sig_bdd_114)) begin
        b1_dataout = ap_const_lv256_lc_1;
    end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~ap_sig_bdd_144)) begin
        b1_dataout = tmp_1_fu_201_p1;
    end else begin
        b1_dataout = 'bx;
    end
end

/// b1_req_din assign process. ///
always @ (ap_CS_fsm or exitcond1_fu_223_p2 or exitcond_fu_259_p2 or ap_sig_bdd_114 or ap_sig_bdd_144)
begin
    if (((ap_ST_st7_fsm_6 == ap_CS_fsm) & (exitcond1_fu_223_p2 == ap_const_lv1_0))) begin
        b1_req_din = ap_const_logic_0;
    end else if ((((ap_ST_st13_fsm_12 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond_fu_259_p2) & ~ap_sig_bdd_114) | ((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~ap_sig_bdd_144))) begin
        b1_req_din = ap_const_logic_1;
    end else begin
        b1_req_din = ap_const_logic_0;
    end
end

/// b1_req_write assign process. ///
always @ (ap_CS_fsm or exitcond1_fu_223_p2 or exitcond_fu_259_p2 or ap_sig_bdd_114 or ap_sig_bdd_144)
begin
    if ((((ap_ST_st7_fsm_6 == ap_CS_fsm) & (exitcond1_fu_223_p2 == ap_const_lv1_0)) | ((ap_ST_st13_fsm_12 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond_fu_259_p2) & ~ap_sig_bdd_114) | ((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~ap_sig_bdd_144))) begin
        b1_req_write = ap_const_logic_1;
    end else begin
        b1_req_write = ap_const_logic_0;
    end
end

/// b1_rsp_read assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_126)
begin
    if (((ap_ST_st12_fsm_11 == ap_CS_fsm) & ~ap_sig_bdd_126)) begin
        b1_rsp_read = ap_const_logic_1;
    end else begin
        b1_rsp_read = ap_const_logic_0;
    end
end

/// b2_address assign process. ///
always @ (ap_CS_fsm or exitcond1_fu_223_p2 or exitcond_fu_259_p2 or ap_sig_bdd_114 or tmp_8_fu_234_p1 or tmp_9_fu_270_p1 or ap_sig_bdd_144)
begin
    if (((ap_ST_st13_fsm_12 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond_fu_259_p2) & ~ap_sig_bdd_114)) begin
        b2_address = tmp_9_fu_270_p1;
    end else if (((ap_ST_st7_fsm_6 == ap_CS_fsm) & (exitcond1_fu_223_p2 == ap_const_lv1_0))) begin
        b2_address = tmp_8_fu_234_p1;
    end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~ap_sig_bdd_144)) begin
        b2_address = ap_const_lv32_0;
    end else begin
        b2_address = 'bx;
    end
end

/// b2_dataout assign process. ///
always @ (ap_CS_fsm or exitcond_fu_259_p2 or ap_sig_bdd_114 or ap_sig_bdd_144 or tmp_3_fu_205_p1)
begin
    if (((ap_ST_st13_fsm_12 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond_fu_259_p2) & ~ap_sig_bdd_114)) begin
        b2_dataout = ap_const_lv256_lc_1;
    end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~ap_sig_bdd_144)) begin
        b2_dataout = tmp_3_fu_205_p1;
    end else begin
        b2_dataout = 'bx;
    end
end

/// b2_req_din assign process. ///
always @ (ap_CS_fsm or exitcond1_fu_223_p2 or exitcond_fu_259_p2 or ap_sig_bdd_114 or ap_sig_bdd_144)
begin
    if (((ap_ST_st7_fsm_6 == ap_CS_fsm) & (exitcond1_fu_223_p2 == ap_const_lv1_0))) begin
        b2_req_din = ap_const_logic_0;
    end else if ((((ap_ST_st13_fsm_12 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond_fu_259_p2) & ~ap_sig_bdd_114) | ((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~ap_sig_bdd_144))) begin
        b2_req_din = ap_const_logic_1;
    end else begin
        b2_req_din = ap_const_logic_0;
    end
end

/// b2_req_write assign process. ///
always @ (ap_CS_fsm or exitcond1_fu_223_p2 or exitcond_fu_259_p2 or ap_sig_bdd_114 or ap_sig_bdd_144)
begin
    if ((((ap_ST_st7_fsm_6 == ap_CS_fsm) & (exitcond1_fu_223_p2 == ap_const_lv1_0)) | ((ap_ST_st13_fsm_12 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond_fu_259_p2) & ~ap_sig_bdd_114) | ((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~ap_sig_bdd_144))) begin
        b2_req_write = ap_const_logic_1;
    end else begin
        b2_req_write = ap_const_logic_0;
    end
end

/// b2_rsp_read assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_126)
begin
    if (((ap_ST_st12_fsm_11 == ap_CS_fsm) & ~ap_sig_bdd_126)) begin
        b2_rsp_read = ap_const_logic_1;
    end else begin
        b2_rsp_read = ap_const_logic_0;
    end
end

/// b3_address assign process. ///
always @ (ap_CS_fsm or exitcond1_fu_223_p2 or exitcond_fu_259_p2 or ap_sig_bdd_114 or tmp_8_fu_234_p1 or tmp_9_fu_270_p1 or ap_sig_bdd_144)
begin
    if (((ap_ST_st13_fsm_12 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond_fu_259_p2) & ~ap_sig_bdd_114)) begin
        b3_address = tmp_9_fu_270_p1;
    end else if (((ap_ST_st7_fsm_6 == ap_CS_fsm) & (exitcond1_fu_223_p2 == ap_const_lv1_0))) begin
        b3_address = tmp_8_fu_234_p1;
    end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~ap_sig_bdd_144)) begin
        b3_address = ap_const_lv32_0;
    end else begin
        b3_address = 'bx;
    end
end

/// b3_dataout assign process. ///
always @ (ap_CS_fsm or exitcond_fu_259_p2 or ap_sig_bdd_114 or ap_sig_bdd_144 or tmp_5_fu_209_p1)
begin
    if (((ap_ST_st13_fsm_12 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond_fu_259_p2) & ~ap_sig_bdd_114)) begin
        b3_dataout = ap_const_lv256_lc_1;
    end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~ap_sig_bdd_144)) begin
        b3_dataout = tmp_5_fu_209_p1;
    end else begin
        b3_dataout = 'bx;
    end
end

/// b3_req_din assign process. ///
always @ (ap_CS_fsm or exitcond1_fu_223_p2 or exitcond_fu_259_p2 or ap_sig_bdd_114 or ap_sig_bdd_144)
begin
    if (((ap_ST_st7_fsm_6 == ap_CS_fsm) & (exitcond1_fu_223_p2 == ap_const_lv1_0))) begin
        b3_req_din = ap_const_logic_0;
    end else if ((((ap_ST_st13_fsm_12 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond_fu_259_p2) & ~ap_sig_bdd_114) | ((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~ap_sig_bdd_144))) begin
        b3_req_din = ap_const_logic_1;
    end else begin
        b3_req_din = ap_const_logic_0;
    end
end

/// b3_req_write assign process. ///
always @ (ap_CS_fsm or exitcond1_fu_223_p2 or exitcond_fu_259_p2 or ap_sig_bdd_114 or ap_sig_bdd_144)
begin
    if ((((ap_ST_st7_fsm_6 == ap_CS_fsm) & (exitcond1_fu_223_p2 == ap_const_lv1_0)) | ((ap_ST_st13_fsm_12 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond_fu_259_p2) & ~ap_sig_bdd_114) | ((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~ap_sig_bdd_144))) begin
        b3_req_write = ap_const_logic_1;
    end else begin
        b3_req_write = ap_const_logic_0;
    end
end

/// b3_rsp_read assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_126)
begin
    if (((ap_ST_st12_fsm_11 == ap_CS_fsm) & ~ap_sig_bdd_126)) begin
        b3_rsp_read = ap_const_logic_1;
    end else begin
        b3_rsp_read = ap_const_logic_0;
    end
end

/// blockSize_ap_ack assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_76)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~ap_sig_bdd_76)) begin
        blockSize_ap_ack = ap_const_logic_1;
    end else begin
        blockSize_ap_ack = ap_const_logic_0;
    end
end

/// grp_fu_195_ce assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_76 or ap_sig_bdd_144)
begin
    if ((((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~ap_sig_bdd_76) | (ap_ST_st6_fsm_5 == ap_CS_fsm) | ((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~ap_sig_bdd_144) | (ap_ST_st3_fsm_2 == ap_CS_fsm) | (ap_ST_st4_fsm_3 == ap_CS_fsm) | (ap_ST_st5_fsm_4 == ap_CS_fsm))) begin
        grp_fu_195_ce = ap_const_logic_1;
    end else begin
        grp_fu_195_ce = ap_const_logic_0;
    end
end
always @ (ap_CS_fsm or ap_sig_bdd_76 or exitcond1_fu_223_p2 or exitcond_fu_259_p2 or ap_sig_bdd_114 or ap_sig_bdd_126 or ap_sig_bdd_144)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
            if (~ap_sig_bdd_76) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        ap_ST_st2_fsm_1 : 
            if (~ap_sig_bdd_144) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        ap_ST_st3_fsm_2 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
        ap_ST_st4_fsm_3 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
        ap_ST_st5_fsm_4 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
        ap_ST_st6_fsm_5 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
        ap_ST_st7_fsm_6 : 
            if (~(exitcond1_fu_223_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        ap_ST_st8_fsm_7 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
        ap_ST_st9_fsm_8 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
        ap_ST_st10_fsm_9 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
        ap_ST_st11_fsm_10 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
        ap_ST_st12_fsm_11 : 
            if (~ap_sig_bdd_126) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end
        ap_ST_st13_fsm_12 : 
            if ((~ap_sig_bdd_114 & ~(ap_const_lv1_0 == exitcond_fu_259_p2))) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else if (((ap_const_lv1_0 == exitcond_fu_259_p2) & ~ap_sig_bdd_114)) begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end else begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end
        default : 
            ap_NS_fsm = 'bx;
    endcase
end

/// ap_sig_bdd_114 assign process. ///
always @ (b1_req_full_n or b2_req_full_n or b3_req_full_n or exitcond_fu_259_p2)
begin
    ap_sig_bdd_114 = (((b1_req_full_n == ap_const_logic_0) & (ap_const_lv1_0 == exitcond_fu_259_p2)) | ((ap_const_lv1_0 == exitcond_fu_259_p2) & (b2_req_full_n == ap_const_logic_0)) | ((ap_const_lv1_0 == exitcond_fu_259_p2) & (b3_req_full_n == ap_const_logic_0)));
end

/// ap_sig_bdd_126 assign process. ///
always @ (b1_rsp_empty_n or b2_rsp_empty_n or b3_rsp_empty_n)
begin
    ap_sig_bdd_126 = ((b1_rsp_empty_n == ap_const_logic_0) | (b2_rsp_empty_n == ap_const_logic_0) | (b3_rsp_empty_n == ap_const_logic_0));
end

/// ap_sig_bdd_144 assign process. ///
always @ (b1_req_full_n or b2_req_full_n or b3_req_full_n)
begin
    ap_sig_bdd_144 = ((b1_req_full_n == ap_const_logic_0) | (b2_req_full_n == ap_const_logic_0) | (b3_req_full_n == ap_const_logic_0));
end

/// ap_sig_bdd_76 assign process. ///
always @ (ap_start or blockSize_ap_vld)
begin
    ap_sig_bdd_76 = ((blockSize_ap_vld == ap_const_logic_0) | (ap_start == ap_const_logic_0));
end
assign b1_size = ap_const_lv32_1;
assign b2_size = ap_const_lv32_1;
assign b3_size = ap_const_lv32_1;
assign exitcond1_fu_223_p2 = (i_reg_124 == tmp_s_reg_316? 1'b1: 1'b0);
assign exitcond_fu_259_p2 = (i5_reg_135 == tmp_s_reg_316? 1'b1: 1'b0);
assign grp_fu_195_p0 = blockSize;
assign grp_fu_195_p1 = blockSize;
assign i_1_fu_228_p2 = (i_reg_124 + ap_const_lv29_1);
assign i_2_fu_264_p2 = (i5_reg_135 + ap_const_lv29_1);
assign tmp_10_fu_153_p0 = blockSize;
assign tmp_10_fu_153_p2 = tmp_10_fu_153_p0 << ap_const_lv32_1;
assign tmp_11_fu_165_p0 = blockSize;
assign tmp_11_fu_165_p2 = tmp_11_fu_165_p0 << ap_const_lv32_4;
assign tmp_12_fu_171_p0 = blockSize;
assign tmp_12_fu_171_p2 = tmp_12_fu_171_p0 << ap_const_lv32_2;
assign tmp_13_fu_183_p0 = blockSize;
assign tmp_13_fu_183_p2 = tmp_13_fu_183_p0 << ap_const_lv32_5;
assign tmp_1_fu_201_p1 = $signed(tmp_reg_301);
assign tmp_2_fu_177_p2 = (tmp_11_fu_165_p2 + tmp_12_fu_171_p2);
assign tmp_3_fu_205_p1 = $signed(tmp_2_reg_306);
assign tmp_4_fu_189_p2 = (tmp_13_fu_183_p2 - tmp_10_fu_153_p2);
assign tmp_5_fu_209_p1 = $signed(tmp_4_reg_311);
assign tmp_7_fu_147_p0 = blockSize;
assign tmp_7_fu_147_p2 = tmp_7_fu_147_p0 << ap_const_lv32_3;
assign tmp_8_fu_234_p1 = $unsigned(i_reg_124);
assign tmp_9_fu_270_p1 = $unsigned(i5_reg_135);
assign tmp_fu_159_p2 = (tmp_7_fu_147_p2 + tmp_10_fu_153_p2);
always @ (posedge ap_clk)
begin
    tmp_reg_301[0] <= 1'b0;
    tmp_2_reg_306[1:0] <= 2'b00;
    tmp_4_reg_311[0] <= 1'b0;
end



endmodule //bmm_top

