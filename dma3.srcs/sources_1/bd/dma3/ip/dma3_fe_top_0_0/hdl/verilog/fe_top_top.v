// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.3
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ==============================================================

`timescale 1 ns / 1 ps
module fe_top_top (
s_axi_CONTROL_AWADDR,
s_axi_CONTROL_AWVALID,
s_axi_CONTROL_AWREADY,
s_axi_CONTROL_WDATA,
s_axi_CONTROL_WSTRB,
s_axi_CONTROL_WVALID,
s_axi_CONTROL_WREADY,
s_axi_CONTROL_BRESP,
s_axi_CONTROL_BVALID,
s_axi_CONTROL_BREADY,
s_axi_CONTROL_ARADDR,
s_axi_CONTROL_ARVALID,
s_axi_CONTROL_ARREADY,
s_axi_CONTROL_RDATA,
s_axi_CONTROL_RRESP,
s_axi_CONTROL_RVALID,
s_axi_CONTROL_RREADY,
interrupt,
aresetn,
aclk,
start,
idle,
done
);

parameter C_S_AXI_CONTROL_ADDR_WIDTH = 4;
parameter C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter RESET_ACTIVE_LOW = 1;

input [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_CONTROL_AWADDR ;
input s_axi_CONTROL_AWVALID ;
output s_axi_CONTROL_AWREADY ;
input [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_CONTROL_WDATA ;
input [C_S_AXI_CONTROL_DATA_WIDTH/8 - 1:0] s_axi_CONTROL_WSTRB ;
input s_axi_CONTROL_WVALID ;
output s_axi_CONTROL_WREADY ;
output [2 - 1:0] s_axi_CONTROL_BRESP ;
output s_axi_CONTROL_BVALID ;
input s_axi_CONTROL_BREADY ;
input [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_CONTROL_ARADDR ;
input s_axi_CONTROL_ARVALID ;
output s_axi_CONTROL_ARREADY ;
output [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_CONTROL_RDATA ;
output [2 - 1:0] s_axi_CONTROL_RRESP ;
output s_axi_CONTROL_RVALID ;
input s_axi_CONTROL_RREADY ;
output interrupt ;

input aresetn ;

input aclk ;

output [32 - 1:0] start ;
input [32 - 1:0] idle ;
input [32 - 1:0] done ;


wire [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_CONTROL_AWADDR;
wire s_axi_CONTROL_AWVALID;
wire s_axi_CONTROL_AWREADY;
wire [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_CONTROL_WDATA;
wire [C_S_AXI_CONTROL_DATA_WIDTH/8 - 1:0] s_axi_CONTROL_WSTRB;
wire s_axi_CONTROL_WVALID;
wire s_axi_CONTROL_WREADY;
wire [2 - 1:0] s_axi_CONTROL_BRESP;
wire s_axi_CONTROL_BVALID;
wire s_axi_CONTROL_BREADY;
wire [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_CONTROL_ARADDR;
wire s_axi_CONTROL_ARVALID;
wire s_axi_CONTROL_ARREADY;
wire [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_CONTROL_RDATA;
wire [2 - 1:0] s_axi_CONTROL_RRESP;
wire s_axi_CONTROL_RVALID;
wire s_axi_CONTROL_RREADY;
wire interrupt;

wire aresetn;


wire sig_fe_top_ap_start;
wire sig_fe_top_ap_ready;
wire sig_fe_top_ap_done;
wire sig_fe_top_ap_idle;

wire sig_fe_top_ap_rst;



fe_top fe_top_U(
    .ap_start(sig_fe_top_ap_start),
    .ap_ready(sig_fe_top_ap_ready),
    .ap_done(sig_fe_top_ap_done),
    .ap_idle(sig_fe_top_ap_idle),
    .ap_rst(sig_fe_top_ap_rst),
    .ap_clk(aclk),
    .start(start),
    .idle(idle),
    .done(done)
);

fe_top_CONTROL_if #(
    .C_ADDR_WIDTH(C_S_AXI_CONTROL_ADDR_WIDTH),
    .C_DATA_WIDTH(C_S_AXI_CONTROL_DATA_WIDTH))
fe_top_CONTROL_if_U(
    .ACLK(aclk),
    .ARESETN(aresetn),
    .I_ap_start(sig_fe_top_ap_start),
    .O_ap_ready(sig_fe_top_ap_ready),
    .O_ap_done(sig_fe_top_ap_done),
    .O_ap_idle(sig_fe_top_ap_idle),
    .AWADDR(s_axi_CONTROL_AWADDR),
    .AWVALID(s_axi_CONTROL_AWVALID),
    .AWREADY(s_axi_CONTROL_AWREADY),
    .WDATA(s_axi_CONTROL_WDATA),
    .WSTRB(s_axi_CONTROL_WSTRB),
    .WVALID(s_axi_CONTROL_WVALID),
    .WREADY(s_axi_CONTROL_WREADY),
    .BRESP(s_axi_CONTROL_BRESP),
    .BVALID(s_axi_CONTROL_BVALID),
    .BREADY(s_axi_CONTROL_BREADY),
    .ARADDR(s_axi_CONTROL_ARADDR),
    .ARVALID(s_axi_CONTROL_ARVALID),
    .ARREADY(s_axi_CONTROL_ARREADY),
    .RDATA(s_axi_CONTROL_RDATA),
    .RRESP(s_axi_CONTROL_RRESP),
    .RVALID(s_axi_CONTROL_RVALID),
    .RREADY(s_axi_CONTROL_RREADY),
    .interrupt(interrupt));

fe_top_ap_rst_if #(
    .RESET_ACTIVE_LOW(RESET_ACTIVE_LOW))
ap_rst_if_U(
    .dout(sig_fe_top_ap_rst),
    .din(aresetn));

endmodule
