-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2013.3
-- Copyright (C) 2013 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bmm_top is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    b1_req_din : OUT STD_LOGIC;
    b1_req_full_n : IN STD_LOGIC;
    b1_req_write : OUT STD_LOGIC;
    b1_rsp_empty_n : IN STD_LOGIC;
    b1_rsp_read : OUT STD_LOGIC;
    b1_address : OUT STD_LOGIC_VECTOR (31 downto 0);
    b1_datain : IN STD_LOGIC_VECTOR (31 downto 0);
    b1_dataout : OUT STD_LOGIC_VECTOR (31 downto 0);
    b1_size : OUT STD_LOGIC_VECTOR (31 downto 0);
    b2_req_din : OUT STD_LOGIC;
    b2_req_full_n : IN STD_LOGIC;
    b2_req_write : OUT STD_LOGIC;
    b2_rsp_empty_n : IN STD_LOGIC;
    b2_rsp_read : OUT STD_LOGIC;
    b2_address : OUT STD_LOGIC_VECTOR (31 downto 0);
    b2_datain : IN STD_LOGIC_VECTOR (31 downto 0);
    b2_dataout : OUT STD_LOGIC_VECTOR (31 downto 0);
    b2_size : OUT STD_LOGIC_VECTOR (31 downto 0);
    b3_req_din : OUT STD_LOGIC;
    b3_req_full_n : IN STD_LOGIC;
    b3_req_write : OUT STD_LOGIC;
    b3_rsp_empty_n : IN STD_LOGIC;
    b3_rsp_read : OUT STD_LOGIC;
    b3_address : OUT STD_LOGIC_VECTOR (31 downto 0);
    b3_datain : IN STD_LOGIC_VECTOR (31 downto 0);
    b3_dataout : OUT STD_LOGIC_VECTOR (31 downto 0);
    b3_size : OUT STD_LOGIC_VECTOR (31 downto 0);
    blockSize : IN STD_LOGIC_VECTOR (31 downto 0);
    blockSize_ap_vld : IN STD_LOGIC;
    blockSize_ap_ack : OUT STD_LOGIC );
end;


architecture behav of bmm_top is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "bmm_top,hls_ip_2013_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z045ffg900-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_ST_pp0_stg0_fsm_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_ST_pp0_stg1_fsm_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_pp0_stg2_fsm_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_ST_pp0_stg3_fsm_10 : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_ST_st24_fsm_11 : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_ST_st25_fsm_12 : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_ST_st26_fsm_13 : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_ST_st27_fsm_14 : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_ST_st28_fsm_15 : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_ST_st29_fsm_16 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_ST_st30_fsm_17 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_ST_st31_fsm_18 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_ST_st32_fsm_19 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv9_180 : STD_LOGIC_VECTOR (8 downto 0) := "110000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal k_reg_173 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmpVal_reg_185 : STD_LOGIC_VECTOR (31 downto 0);
    signal blockSize_read_reg_589 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_bdd_87 : BOOLEAN;
    signal cast_fu_213_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_217_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal bound_reg_604 : STD_LOGIC_VECTOR (63 downto 0);
    signal indvar_flatten_next_fu_228_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal indvar_flatten_next_reg_612 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_mid2_fu_239_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_mid2_reg_617 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_flatten_fu_223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_mid2_fu_253_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_mid2_reg_622 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_cast_fu_269_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_5_fu_261_p3_temp: signed (39-1 downto 0);
    signal tmp_5_cast_reg_627 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_3_cast_fu_273_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal j_mid2_fu_239_p3_temp: signed (32-1 downto 0);
    signal tmp_3_cast_reg_636 : STD_LOGIC_VECTOR (39 downto 0);
    signal exitcond_fu_277_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_645 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond_reg_645_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_1_reg_661 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_1_reg_661_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_2_reg_682 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_2_reg_682_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_133 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond_reg_645_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_645_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal b1_addr_reg_649 : STD_LOGIC_VECTOR (31 downto 0);
    signal b2_addr_reg_655 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_1_fu_346_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_3_reg_703 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_3_reg_703_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_168 : BOOLEAN;
    signal ap_reg_ppstg_exitcond_1_reg_661_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_1_reg_661_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal b1_addr_1_reg_665 : STD_LOGIC_VECTOR (31 downto 0);
    signal b2_addr_1_reg_671 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_397_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_13_reg_677 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_sig_bdd_196 : BOOLEAN;
    signal exitcond_2_fu_415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_2_reg_682_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_2_reg_682_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal b1_addr_2_reg_686 : STD_LOGIC_VECTOR (31 downto 0);
    signal b2_addr_2_reg_692 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_1_2_fu_466_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_1_2_reg_698 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_3_fu_474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_3_reg_703_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_3_reg_703_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_1_3_fu_479_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_1_3_reg_707 : STD_LOGIC_VECTOR (31 downto 0);
    signal b1_addr_3_reg_712 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_bdd_237 : BOOLEAN;
    signal b2_addr_3_reg_718 : STD_LOGIC_VECTOR (31 downto 0);
    signal b1_addr_read_reg_724 : STD_LOGIC_VECTOR (31 downto 0);
    signal b2_addr_read_reg_729 : STD_LOGIC_VECTOR (31 downto 0);
    signal b1_addr_1_read_reg_734 : STD_LOGIC_VECTOR (31 downto 0);
    signal b2_addr_1_read_reg_739 : STD_LOGIC_VECTOR (31 downto 0);
    signal b1_addr_2_read_reg_744 : STD_LOGIC_VECTOR (31 downto 0);
    signal b2_addr_2_read_reg_749 : STD_LOGIC_VECTOR (31 downto 0);
    signal b1_addr_3_read_reg_754 : STD_LOGIC_VECTOR (31 downto 0);
    signal b2_addr_3_read_reg_759 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmpVal_1_fu_545_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmpVal_1_reg_764 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_533_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_1_reg_770 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmpVal_1_1_fu_551_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmpVal_1_1_reg_775 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_537_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_2_reg_781 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmpVal_1_2_fu_555_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmpVal_1_3_fu_559_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal b3_addr_reg_796 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_1_fu_579_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_1_reg_802 : STD_LOGIC_VECTOR (31 downto 0);
    signal b3_addr_read_reg_807 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_584_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_reg_812 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten_reg_140 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_reg_151 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_reg_162 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_phi_fu_177_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmpVal_lcssa_reg_197 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_cast_fu_291_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_fu_286_p2_temp: signed (40-1 downto 0);
    signal tmp_9_cast_fu_318_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_313_p2_temp: signed (40-1 downto 0);
    signal tmp_11_cast_fu_360_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_355_p2_temp: signed (40-1 downto 0);
    signal tmp_13_cast_fu_387_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_fu_382_p2_temp: signed (40-1 downto 0);
    signal tmp_15_cast_fu_429_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_10_fu_424_p2_temp: signed (40-1 downto 0);
    signal tmp_17_cast_fu_456_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_fu_451_p2_temp: signed (40-1 downto 0);
    signal tmp_21_cast_fu_493_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_fu_488_p2_temp: signed (40-1 downto 0);
    signal tmp_23_cast_fu_519_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_fu_514_p2_temp: signed (40-1 downto 0);
    signal tmp_19_cast_fu_569_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_fu_565_p2_temp: signed (40-1 downto 0);
    signal grp_fu_217_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_217_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond1_fu_234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_s_fu_247_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_261_p3 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_7_fu_286_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_phi_fu_177_p4_temp: signed (32-1 downto 0);
    signal tmp_7_fu_286_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_8_fu_301_p3 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_9_fu_313_p0 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_8_fu_301_p3_temp: signed (39-1 downto 0);
    signal tmp_9_fu_313_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_fu_328_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal k_1_s_fu_338_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_355_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_1_s_fu_338_p3_temp: signed (32-1 downto 0);
    signal tmp_1_fu_355_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_3_fu_370_p3 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_6_fu_382_p0 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_3_fu_370_p3_temp: signed (39-1 downto 0);
    signal tmp_6_fu_382_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_1_1_fu_407_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_424_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_1_1_fu_407_p3_temp: signed (32-1 downto 0);
    signal tmp_10_fu_424_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_11_fu_439_p3 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_12_fu_451_p0 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_11_fu_439_p3_temp: signed (39-1 downto 0);
    signal tmp_12_fu_451_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_15_fu_488_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_1_2_reg_698_temp: signed (32-1 downto 0);
    signal tmp_15_fu_488_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_16_fu_503_p3 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_17_fu_514_p0 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_16_fu_503_p3_temp: signed (39-1 downto 0);
    signal tmp_17_fu_514_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_529_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_529_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_533_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_533_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_537_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_537_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_541_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_541_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_529_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_541_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_565_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_217_ce : STD_LOGIC;
    signal grp_fu_529_ce : STD_LOGIC;
    signal grp_fu_533_ce : STD_LOGIC;
    signal grp_fu_537_ce : STD_LOGIC;
    signal grp_fu_541_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_bdd_172 : BOOLEAN;
    signal ap_sig_bdd_728 : BOOLEAN;
    signal ap_sig_bdd_733 : BOOLEAN;
    signal ap_sig_bdd_737 : BOOLEAN;
    signal ap_sig_bdd_739 : BOOLEAN;
    signal ap_sig_bdd_742 : BOOLEAN;
    signal ap_sig_bdd_746 : BOOLEAN;
    signal ap_sig_bdd_751 : BOOLEAN;

    component bmm_top_mul_32ns_32ns_64_6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component bmm_top_mul_32s_32s_32_6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    bmm_top_mul_32ns_32ns_64_6_U1 : component bmm_top_mul_32ns_32ns_64_6
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_217_p0,
        din1 => grp_fu_217_p1,
        ce => grp_fu_217_ce,
        dout => grp_fu_217_p2);

    bmm_top_mul_32s_32s_32_6_U2 : component bmm_top_mul_32s_32s_32_6
    generic map (
        ID => 2,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_529_p0,
        din1 => grp_fu_529_p1,
        ce => grp_fu_529_ce,
        dout => grp_fu_529_p2);

    bmm_top_mul_32s_32s_32_6_U3 : component bmm_top_mul_32s_32s_32_6
    generic map (
        ID => 3,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_533_p0,
        din1 => grp_fu_533_p1,
        ce => grp_fu_533_ce,
        dout => grp_fu_533_p2);

    bmm_top_mul_32s_32s_32_6_U4 : component bmm_top_mul_32s_32s_32_6
    generic map (
        ID => 4,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_537_p0,
        din1 => grp_fu_537_p1,
        ce => grp_fu_537_ce,
        dout => grp_fu_537_p2);

    bmm_top_mul_32s_32s_32_6_U5 : component bmm_top_mul_32s_32s_32_6
    generic map (
        ID => 5,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_541_p0,
        din1 => grp_fu_541_p1,
        ce => grp_fu_541_ce,
        dout => grp_fu_541_p2);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg3_fsm_10 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_237)) and (not((ap_const_lv1_0 = exitcond_reg_645)) or ((ap_const_lv1_0 = exitcond_reg_645) and not((ap_const_lv1_0 = exitcond_1_reg_661))) or ((ap_const_lv1_0 = exitcond_reg_645) and (ap_const_lv1_0 = exitcond_1_reg_661) and not((ap_const_lv1_0 = exitcond_2_reg_682))) or ((ap_const_lv1_0 = exitcond_reg_645) and (ap_const_lv1_0 = exitcond_1_reg_661) and (ap_const_lv1_0 = exitcond_2_reg_682) and not((ap_const_lv1_0 = exitcond_3_reg_703)))))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_ST_st7_fsm_6 = ap_CS_fsm) and (exitcond_flatten_fu_223_p2 = ap_const_lv1_0))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg3_fsm_10 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_237)))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
                elsif (((ap_ST_st7_fsm_6 = ap_CS_fsm) and (exitcond_flatten_fu_223_p2 = ap_const_lv1_0))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg3_fsm_10 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_237)))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                elsif (((ap_ST_st7_fsm_6 = ap_CS_fsm) and (exitcond_flatten_fu_223_p2 = ap_const_lv1_0))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it3 assign process. --
    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg3_fsm_10 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_237)))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                elsif (((ap_ST_st7_fsm_6 = ap_CS_fsm) and (exitcond_flatten_fu_223_p2 = ap_const_lv1_0))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- i_reg_151 assign process. --
    i_reg_151_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st32_fsm_19 = ap_CS_fsm) and not((b3_req_full_n = ap_const_logic_0)))) then 
                i_reg_151 <= i_mid2_reg_622;
            elsif ((ap_ST_st6_fsm_5 = ap_CS_fsm)) then 
                i_reg_151 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    -- indvar_flatten_reg_140 assign process. --
    indvar_flatten_reg_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st32_fsm_19 = ap_CS_fsm) and not((b3_req_full_n = ap_const_logic_0)))) then 
                indvar_flatten_reg_140 <= indvar_flatten_next_reg_612;
            elsif ((ap_ST_st6_fsm_5 = ap_CS_fsm)) then 
                indvar_flatten_reg_140 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    -- j_reg_162 assign process. --
    j_reg_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st32_fsm_19 = ap_CS_fsm) and not((b3_req_full_n = ap_const_logic_0)))) then 
                j_reg_162 <= j_1_reg_802;
            elsif ((ap_ST_st6_fsm_5 = ap_CS_fsm)) then 
                j_reg_162 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    -- k_reg_173 assign process. --
    k_reg_173_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st7_fsm_6 = ap_CS_fsm) and (exitcond_flatten_fu_223_p2 = ap_const_lv1_0))) then 
                k_reg_173 <= ap_const_lv32_0;
            elsif (((ap_ST_pp0_stg0_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_133 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))) and (ap_const_lv1_0 = exitcond_reg_645) and (ap_const_lv1_0 = exitcond_1_reg_661) and (ap_const_lv1_0 = exitcond_2_reg_682) and (ap_const_lv1_0 = exitcond_3_reg_703))) then 
                k_reg_173 <= k_1_3_reg_707;
            end if; 
        end if;
    end process;

    -- tmpVal_lcssa_reg_197 assign process. --
    tmpVal_lcssa_reg_197_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) then
                if (ap_sig_bdd_751) then 
                    tmpVal_lcssa_reg_197 <= tmpVal_1_2_fu_555_p2;
                elsif (ap_sig_bdd_746) then 
                    tmpVal_lcssa_reg_197 <= tmpVal_1_1_fu_551_p2;
                elsif (ap_sig_bdd_742) then 
                    tmpVal_lcssa_reg_197 <= tmpVal_1_reg_764;
                elsif (ap_sig_bdd_739) then 
                    tmpVal_lcssa_reg_197 <= tmpVal_reg_185;
                end if;
            end if; 
        end if;
    end process;

    -- tmpVal_reg_185 assign process. --
    tmpVal_reg_185_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st7_fsm_6 = ap_CS_fsm) and (exitcond_flatten_fu_223_p2 = ap_const_lv1_0))) then 
                tmpVal_reg_185 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_ST_pp0_stg3_fsm_10 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_237)) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_2_reg_682_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_3_reg_703_pp0_it3))) then 
                tmpVal_reg_185 <= tmpVal_1_3_fu_559_p2;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg1_fsm_8 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and ap_sig_bdd_168)))) then
                ap_reg_ppstg_exitcond_1_reg_661_pp0_it1 <= exitcond_1_reg_661;
                ap_reg_ppstg_exitcond_1_reg_661_pp0_it2 <= ap_reg_ppstg_exitcond_1_reg_661_pp0_it1;
                ap_reg_ppstg_exitcond_1_reg_661_pp0_it3 <= ap_reg_ppstg_exitcond_1_reg_661_pp0_it2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg2_fsm_9 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_196)))) then
                ap_reg_ppstg_exitcond_2_reg_682_pp0_it1 <= exitcond_2_reg_682;
                ap_reg_ppstg_exitcond_2_reg_682_pp0_it2 <= ap_reg_ppstg_exitcond_2_reg_682_pp0_it1;
                ap_reg_ppstg_exitcond_2_reg_682_pp0_it3 <= ap_reg_ppstg_exitcond_2_reg_682_pp0_it2;
                ap_reg_ppstg_exitcond_3_reg_703_pp0_it1 <= exitcond_3_reg_703;
                ap_reg_ppstg_exitcond_3_reg_703_pp0_it2 <= ap_reg_ppstg_exitcond_3_reg_703_pp0_it1;
                ap_reg_ppstg_exitcond_3_reg_703_pp0_it3 <= ap_reg_ppstg_exitcond_3_reg_703_pp0_it2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_7 = ap_CS_fsm) and not((ap_sig_bdd_133 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))))) then
                ap_reg_ppstg_exitcond_reg_645_pp0_it1 <= exitcond_reg_645;
                ap_reg_ppstg_exitcond_reg_645_pp0_it2 <= ap_reg_ppstg_exitcond_reg_645_pp0_it1;
                ap_reg_ppstg_exitcond_reg_645_pp0_it3 <= ap_reg_ppstg_exitcond_reg_645_pp0_it2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it1) and (ap_ST_pp0_stg3_fsm_10 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_237)))) then
                b1_addr_1_read_reg_734 <= b1_datain;
                b2_addr_1_read_reg_739 <= b2_datain;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_ST_pp0_stg1_fsm_8 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and ap_sig_bdd_168)) and (ap_const_lv1_0 = exitcond_reg_645) and (ap_const_lv1_0 = exitcond_1_fu_346_p2))) then
                b1_addr_1_reg_665(1) <= tmp_11_cast_fu_360_p1(32 - 1 downto 0)(1);
    b1_addr_1_reg_665(2) <= tmp_11_cast_fu_360_p1(32 - 1 downto 0)(2);
    b1_addr_1_reg_665(3) <= tmp_11_cast_fu_360_p1(32 - 1 downto 0)(3);
    b1_addr_1_reg_665(4) <= tmp_11_cast_fu_360_p1(32 - 1 downto 0)(4);
    b1_addr_1_reg_665(5) <= tmp_11_cast_fu_360_p1(32 - 1 downto 0)(5);
    b1_addr_1_reg_665(6) <= tmp_11_cast_fu_360_p1(32 - 1 downto 0)(6);
    b1_addr_1_reg_665(7) <= tmp_11_cast_fu_360_p1(32 - 1 downto 0)(7);
    b1_addr_1_reg_665(8) <= tmp_11_cast_fu_360_p1(32 - 1 downto 0)(8);
    b1_addr_1_reg_665(9) <= tmp_11_cast_fu_360_p1(32 - 1 downto 0)(9);
    b1_addr_1_reg_665(10) <= tmp_11_cast_fu_360_p1(32 - 1 downto 0)(10);
    b1_addr_1_reg_665(11) <= tmp_11_cast_fu_360_p1(32 - 1 downto 0)(11);
    b1_addr_1_reg_665(12) <= tmp_11_cast_fu_360_p1(32 - 1 downto 0)(12);
    b1_addr_1_reg_665(13) <= tmp_11_cast_fu_360_p1(32 - 1 downto 0)(13);
    b1_addr_1_reg_665(14) <= tmp_11_cast_fu_360_p1(32 - 1 downto 0)(14);
    b1_addr_1_reg_665(15) <= tmp_11_cast_fu_360_p1(32 - 1 downto 0)(15);
    b1_addr_1_reg_665(16) <= tmp_11_cast_fu_360_p1(32 - 1 downto 0)(16);
    b1_addr_1_reg_665(17) <= tmp_11_cast_fu_360_p1(32 - 1 downto 0)(17);
    b1_addr_1_reg_665(18) <= tmp_11_cast_fu_360_p1(32 - 1 downto 0)(18);
    b1_addr_1_reg_665(19) <= tmp_11_cast_fu_360_p1(32 - 1 downto 0)(19);
    b1_addr_1_reg_665(20) <= tmp_11_cast_fu_360_p1(32 - 1 downto 0)(20);
    b1_addr_1_reg_665(21) <= tmp_11_cast_fu_360_p1(32 - 1 downto 0)(21);
    b1_addr_1_reg_665(22) <= tmp_11_cast_fu_360_p1(32 - 1 downto 0)(22);
    b1_addr_1_reg_665(23) <= tmp_11_cast_fu_360_p1(32 - 1 downto 0)(23);
    b1_addr_1_reg_665(24) <= tmp_11_cast_fu_360_p1(32 - 1 downto 0)(24);
    b1_addr_1_reg_665(25) <= tmp_11_cast_fu_360_p1(32 - 1 downto 0)(25);
    b1_addr_1_reg_665(26) <= tmp_11_cast_fu_360_p1(32 - 1 downto 0)(26);
    b1_addr_1_reg_665(27) <= tmp_11_cast_fu_360_p1(32 - 1 downto 0)(27);
    b1_addr_1_reg_665(28) <= tmp_11_cast_fu_360_p1(32 - 1 downto 0)(28);
    b1_addr_1_reg_665(29) <= tmp_11_cast_fu_360_p1(32 - 1 downto 0)(29);
    b1_addr_1_reg_665(30) <= tmp_11_cast_fu_360_p1(32 - 1 downto 0)(30);
    b1_addr_1_reg_665(31) <= tmp_11_cast_fu_360_p1(32 - 1 downto 0)(31);
                b2_addr_1_reg_671 <= tmp_13_cast_fu_387_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_7 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_2_reg_682_pp0_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_sig_bdd_133 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))))) then
                b1_addr_2_read_reg_744 <= b1_datain;
                b2_addr_2_read_reg_749 <= b2_datain;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond_reg_645) and (ap_ST_pp0_stg2_fsm_9 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_196)) and (ap_const_lv1_0 = exitcond_1_reg_661) and (ap_const_lv1_0 = exitcond_2_fu_415_p2))) then
                b1_addr_2_reg_686(2) <= tmp_15_cast_fu_429_p1(32 - 1 downto 0)(2);
    b1_addr_2_reg_686(3) <= tmp_15_cast_fu_429_p1(32 - 1 downto 0)(3);
    b1_addr_2_reg_686(4) <= tmp_15_cast_fu_429_p1(32 - 1 downto 0)(4);
    b1_addr_2_reg_686(5) <= tmp_15_cast_fu_429_p1(32 - 1 downto 0)(5);
    b1_addr_2_reg_686(6) <= tmp_15_cast_fu_429_p1(32 - 1 downto 0)(6);
    b1_addr_2_reg_686(7) <= tmp_15_cast_fu_429_p1(32 - 1 downto 0)(7);
    b1_addr_2_reg_686(8) <= tmp_15_cast_fu_429_p1(32 - 1 downto 0)(8);
    b1_addr_2_reg_686(9) <= tmp_15_cast_fu_429_p1(32 - 1 downto 0)(9);
    b1_addr_2_reg_686(10) <= tmp_15_cast_fu_429_p1(32 - 1 downto 0)(10);
    b1_addr_2_reg_686(11) <= tmp_15_cast_fu_429_p1(32 - 1 downto 0)(11);
    b1_addr_2_reg_686(12) <= tmp_15_cast_fu_429_p1(32 - 1 downto 0)(12);
    b1_addr_2_reg_686(13) <= tmp_15_cast_fu_429_p1(32 - 1 downto 0)(13);
    b1_addr_2_reg_686(14) <= tmp_15_cast_fu_429_p1(32 - 1 downto 0)(14);
    b1_addr_2_reg_686(15) <= tmp_15_cast_fu_429_p1(32 - 1 downto 0)(15);
    b1_addr_2_reg_686(16) <= tmp_15_cast_fu_429_p1(32 - 1 downto 0)(16);
    b1_addr_2_reg_686(17) <= tmp_15_cast_fu_429_p1(32 - 1 downto 0)(17);
    b1_addr_2_reg_686(18) <= tmp_15_cast_fu_429_p1(32 - 1 downto 0)(18);
    b1_addr_2_reg_686(19) <= tmp_15_cast_fu_429_p1(32 - 1 downto 0)(19);
    b1_addr_2_reg_686(20) <= tmp_15_cast_fu_429_p1(32 - 1 downto 0)(20);
    b1_addr_2_reg_686(21) <= tmp_15_cast_fu_429_p1(32 - 1 downto 0)(21);
    b1_addr_2_reg_686(22) <= tmp_15_cast_fu_429_p1(32 - 1 downto 0)(22);
    b1_addr_2_reg_686(23) <= tmp_15_cast_fu_429_p1(32 - 1 downto 0)(23);
    b1_addr_2_reg_686(24) <= tmp_15_cast_fu_429_p1(32 - 1 downto 0)(24);
    b1_addr_2_reg_686(25) <= tmp_15_cast_fu_429_p1(32 - 1 downto 0)(25);
    b1_addr_2_reg_686(26) <= tmp_15_cast_fu_429_p1(32 - 1 downto 0)(26);
    b1_addr_2_reg_686(27) <= tmp_15_cast_fu_429_p1(32 - 1 downto 0)(27);
    b1_addr_2_reg_686(28) <= tmp_15_cast_fu_429_p1(32 - 1 downto 0)(28);
    b1_addr_2_reg_686(29) <= tmp_15_cast_fu_429_p1(32 - 1 downto 0)(29);
    b1_addr_2_reg_686(30) <= tmp_15_cast_fu_429_p1(32 - 1 downto 0)(30);
    b1_addr_2_reg_686(31) <= tmp_15_cast_fu_429_p1(32 - 1 downto 0)(31);
                b2_addr_2_reg_692 <= tmp_17_cast_fu_456_p1(32 - 1 downto 0);
                exitcond_3_reg_703 <= exitcond_3_fu_474_p2;
                k_1_2_reg_698(2) <= k_1_2_fu_466_p3(2);
    k_1_2_reg_698(3) <= k_1_2_fu_466_p3(3);
    k_1_2_reg_698(4) <= k_1_2_fu_466_p3(4);
    k_1_2_reg_698(5) <= k_1_2_fu_466_p3(5);
    k_1_2_reg_698(6) <= k_1_2_fu_466_p3(6);
    k_1_2_reg_698(7) <= k_1_2_fu_466_p3(7);
    k_1_2_reg_698(8) <= k_1_2_fu_466_p3(8);
    k_1_2_reg_698(9) <= k_1_2_fu_466_p3(9);
    k_1_2_reg_698(10) <= k_1_2_fu_466_p3(10);
    k_1_2_reg_698(11) <= k_1_2_fu_466_p3(11);
    k_1_2_reg_698(12) <= k_1_2_fu_466_p3(12);
    k_1_2_reg_698(13) <= k_1_2_fu_466_p3(13);
    k_1_2_reg_698(14) <= k_1_2_fu_466_p3(14);
    k_1_2_reg_698(15) <= k_1_2_fu_466_p3(15);
    k_1_2_reg_698(16) <= k_1_2_fu_466_p3(16);
    k_1_2_reg_698(17) <= k_1_2_fu_466_p3(17);
    k_1_2_reg_698(18) <= k_1_2_fu_466_p3(18);
    k_1_2_reg_698(19) <= k_1_2_fu_466_p3(19);
    k_1_2_reg_698(20) <= k_1_2_fu_466_p3(20);
    k_1_2_reg_698(21) <= k_1_2_fu_466_p3(21);
    k_1_2_reg_698(22) <= k_1_2_fu_466_p3(22);
    k_1_2_reg_698(23) <= k_1_2_fu_466_p3(23);
    k_1_2_reg_698(24) <= k_1_2_fu_466_p3(24);
    k_1_2_reg_698(25) <= k_1_2_fu_466_p3(25);
    k_1_2_reg_698(26) <= k_1_2_fu_466_p3(26);
    k_1_2_reg_698(27) <= k_1_2_fu_466_p3(27);
    k_1_2_reg_698(28) <= k_1_2_fu_466_p3(28);
    k_1_2_reg_698(29) <= k_1_2_fu_466_p3(29);
    k_1_2_reg_698(30) <= k_1_2_fu_466_p3(30);
    k_1_2_reg_698(31) <= k_1_2_fu_466_p3(31);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_2_reg_682_pp0_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_ST_pp0_stg1_fsm_8 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_3_reg_703_pp0_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and ap_sig_bdd_168)))) then
                b1_addr_3_read_reg_754 <= b1_datain;
                b2_addr_3_read_reg_759 <= b2_datain;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond_reg_645) and (ap_const_lv1_0 = exitcond_1_reg_661) and (ap_ST_pp0_stg3_fsm_10 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_237)) and (ap_const_lv1_0 = exitcond_2_reg_682) and (ap_const_lv1_0 = exitcond_3_reg_703))) then
                b1_addr_3_reg_712(2) <= tmp_21_cast_fu_493_p1(32 - 1 downto 0)(2);
    b1_addr_3_reg_712(3) <= tmp_21_cast_fu_493_p1(32 - 1 downto 0)(3);
    b1_addr_3_reg_712(4) <= tmp_21_cast_fu_493_p1(32 - 1 downto 0)(4);
    b1_addr_3_reg_712(5) <= tmp_21_cast_fu_493_p1(32 - 1 downto 0)(5);
    b1_addr_3_reg_712(6) <= tmp_21_cast_fu_493_p1(32 - 1 downto 0)(6);
    b1_addr_3_reg_712(7) <= tmp_21_cast_fu_493_p1(32 - 1 downto 0)(7);
    b1_addr_3_reg_712(8) <= tmp_21_cast_fu_493_p1(32 - 1 downto 0)(8);
    b1_addr_3_reg_712(9) <= tmp_21_cast_fu_493_p1(32 - 1 downto 0)(9);
    b1_addr_3_reg_712(10) <= tmp_21_cast_fu_493_p1(32 - 1 downto 0)(10);
    b1_addr_3_reg_712(11) <= tmp_21_cast_fu_493_p1(32 - 1 downto 0)(11);
    b1_addr_3_reg_712(12) <= tmp_21_cast_fu_493_p1(32 - 1 downto 0)(12);
    b1_addr_3_reg_712(13) <= tmp_21_cast_fu_493_p1(32 - 1 downto 0)(13);
    b1_addr_3_reg_712(14) <= tmp_21_cast_fu_493_p1(32 - 1 downto 0)(14);
    b1_addr_3_reg_712(15) <= tmp_21_cast_fu_493_p1(32 - 1 downto 0)(15);
    b1_addr_3_reg_712(16) <= tmp_21_cast_fu_493_p1(32 - 1 downto 0)(16);
    b1_addr_3_reg_712(17) <= tmp_21_cast_fu_493_p1(32 - 1 downto 0)(17);
    b1_addr_3_reg_712(18) <= tmp_21_cast_fu_493_p1(32 - 1 downto 0)(18);
    b1_addr_3_reg_712(19) <= tmp_21_cast_fu_493_p1(32 - 1 downto 0)(19);
    b1_addr_3_reg_712(20) <= tmp_21_cast_fu_493_p1(32 - 1 downto 0)(20);
    b1_addr_3_reg_712(21) <= tmp_21_cast_fu_493_p1(32 - 1 downto 0)(21);
    b1_addr_3_reg_712(22) <= tmp_21_cast_fu_493_p1(32 - 1 downto 0)(22);
    b1_addr_3_reg_712(23) <= tmp_21_cast_fu_493_p1(32 - 1 downto 0)(23);
    b1_addr_3_reg_712(24) <= tmp_21_cast_fu_493_p1(32 - 1 downto 0)(24);
    b1_addr_3_reg_712(25) <= tmp_21_cast_fu_493_p1(32 - 1 downto 0)(25);
    b1_addr_3_reg_712(26) <= tmp_21_cast_fu_493_p1(32 - 1 downto 0)(26);
    b1_addr_3_reg_712(27) <= tmp_21_cast_fu_493_p1(32 - 1 downto 0)(27);
    b1_addr_3_reg_712(28) <= tmp_21_cast_fu_493_p1(32 - 1 downto 0)(28);
    b1_addr_3_reg_712(29) <= tmp_21_cast_fu_493_p1(32 - 1 downto 0)(29);
    b1_addr_3_reg_712(30) <= tmp_21_cast_fu_493_p1(32 - 1 downto 0)(30);
    b1_addr_3_reg_712(31) <= tmp_21_cast_fu_493_p1(32 - 1 downto 0)(31);
                b2_addr_3_reg_718 <= tmp_23_cast_fu_519_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it1) and (ap_ST_pp0_stg2_fsm_9 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_196)))) then
                b1_addr_read_reg_724 <= b1_datain;
                b2_addr_read_reg_729 <= b2_datain;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_133 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))) and (ap_const_lv1_0 = exitcond_fu_277_p2))) then
                b1_addr_reg_649 <= tmp_7_cast_fu_291_p1(32 - 1 downto 0);
                b2_addr_reg_655 <= tmp_9_cast_fu_318_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st30_fsm_17 = ap_CS_fsm) and not((b3_rsp_empty_n = ap_const_logic_0)))) then
                b3_addr_read_reg_807 <= b3_datain;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st24_fsm_11 = ap_CS_fsm)) then
                b3_addr_reg_796 <= tmp_19_cast_fu_569_p1(32 - 1 downto 0);
                j_1_reg_802 <= j_1_fu_579_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not(ap_sig_bdd_87))) then
                blockSize_read_reg_589 <= blockSize;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st6_fsm_5 = ap_CS_fsm)) then
                bound_reg_604 <= grp_fu_217_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_ST_pp0_stg1_fsm_8 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and ap_sig_bdd_168)) and (ap_const_lv1_0 = exitcond_reg_645))) then
                exitcond_1_reg_661 <= exitcond_1_fu_346_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond_reg_645) and (ap_ST_pp0_stg2_fsm_9 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_196)) and (ap_const_lv1_0 = exitcond_1_reg_661))) then
                exitcond_2_reg_682 <= exitcond_2_fu_415_p2;
                tmp_13_reg_677 <= k_reg_173(31 downto 2);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_133 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))))) then
                exitcond_reg_645 <= exitcond_fu_277_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st7_fsm_6 = ap_CS_fsm) and (exitcond_flatten_fu_223_p2 = ap_const_lv1_0))) then
                i_mid2_reg_622 <= i_mid2_fu_253_p3;
                j_mid2_reg_617 <= j_mid2_fu_239_p3;
                tmp_3_cast_reg_636 <= tmp_3_cast_fu_273_p1;
                tmp_5_cast_reg_627(7) <= tmp_5_cast_fu_269_p1(7);
    tmp_5_cast_reg_627(8) <= tmp_5_cast_fu_269_p1(8);
    tmp_5_cast_reg_627(9) <= tmp_5_cast_fu_269_p1(9);
    tmp_5_cast_reg_627(10) <= tmp_5_cast_fu_269_p1(10);
    tmp_5_cast_reg_627(11) <= tmp_5_cast_fu_269_p1(11);
    tmp_5_cast_reg_627(12) <= tmp_5_cast_fu_269_p1(12);
    tmp_5_cast_reg_627(13) <= tmp_5_cast_fu_269_p1(13);
    tmp_5_cast_reg_627(14) <= tmp_5_cast_fu_269_p1(14);
    tmp_5_cast_reg_627(15) <= tmp_5_cast_fu_269_p1(15);
    tmp_5_cast_reg_627(16) <= tmp_5_cast_fu_269_p1(16);
    tmp_5_cast_reg_627(17) <= tmp_5_cast_fu_269_p1(17);
    tmp_5_cast_reg_627(18) <= tmp_5_cast_fu_269_p1(18);
    tmp_5_cast_reg_627(19) <= tmp_5_cast_fu_269_p1(19);
    tmp_5_cast_reg_627(20) <= tmp_5_cast_fu_269_p1(20);
    tmp_5_cast_reg_627(21) <= tmp_5_cast_fu_269_p1(21);
    tmp_5_cast_reg_627(22) <= tmp_5_cast_fu_269_p1(22);
    tmp_5_cast_reg_627(23) <= tmp_5_cast_fu_269_p1(23);
    tmp_5_cast_reg_627(24) <= tmp_5_cast_fu_269_p1(24);
    tmp_5_cast_reg_627(25) <= tmp_5_cast_fu_269_p1(25);
    tmp_5_cast_reg_627(26) <= tmp_5_cast_fu_269_p1(26);
    tmp_5_cast_reg_627(27) <= tmp_5_cast_fu_269_p1(27);
    tmp_5_cast_reg_627(28) <= tmp_5_cast_fu_269_p1(28);
    tmp_5_cast_reg_627(29) <= tmp_5_cast_fu_269_p1(29);
    tmp_5_cast_reg_627(30) <= tmp_5_cast_fu_269_p1(30);
    tmp_5_cast_reg_627(31) <= tmp_5_cast_fu_269_p1(31);
    tmp_5_cast_reg_627(32) <= tmp_5_cast_fu_269_p1(32);
    tmp_5_cast_reg_627(33) <= tmp_5_cast_fu_269_p1(33);
    tmp_5_cast_reg_627(34) <= tmp_5_cast_fu_269_p1(34);
    tmp_5_cast_reg_627(35) <= tmp_5_cast_fu_269_p1(35);
    tmp_5_cast_reg_627(36) <= tmp_5_cast_fu_269_p1(36);
    tmp_5_cast_reg_627(37) <= tmp_5_cast_fu_269_p1(37);
    tmp_5_cast_reg_627(38) <= tmp_5_cast_fu_269_p1(38);
    tmp_5_cast_reg_627(39) <= tmp_5_cast_fu_269_p1(39);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st7_fsm_6 = ap_CS_fsm)) then
                indvar_flatten_next_reg_612 <= indvar_flatten_next_fu_228_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond_reg_645) and (ap_ST_pp0_stg2_fsm_9 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_196)) and (ap_const_lv1_0 = exitcond_1_reg_661) and (ap_const_lv1_0 = exitcond_2_fu_415_p2) and (ap_const_lv1_0 = exitcond_3_fu_474_p2))) then
                k_1_3_reg_707 <= k_1_3_fu_479_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_ST_pp0_stg2_fsm_9 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_196)) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it3))) then
                tmpVal_1_1_reg_775 <= tmpVal_1_1_fu_551_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not((ap_sig_bdd_133 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it2))) then
                tmpVal_1_reg_764 <= tmpVal_1_fu_545_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st31_fsm_18 = ap_CS_fsm)) then
                tmp_4_reg_812 <= tmp_4_fu_584_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_ST_pp0_stg1_fsm_8 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and ap_sig_bdd_168)) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it2))) then
                tmp_7_1_reg_770 <= grp_fu_533_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_ST_pp0_stg2_fsm_9 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_196)) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_2_reg_682_pp0_it2))) then
                tmp_7_2_reg_781 <= grp_fu_537_p2;
            end if;
        end if;
    end process;
    tmp_5_cast_reg_627(6 downto 0) <= "0000000";
    b1_addr_1_reg_665(0) <= '1';
    b1_addr_2_reg_686(1 downto 0) <= "10";
    k_1_2_reg_698(1 downto 0) <= "11";
    b1_addr_3_reg_712(1 downto 0) <= "11";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_CS_fsm , b3_req_full_n , b3_rsp_empty_n , ap_sig_bdd_87 , exitcond_flatten_fu_223_p2 , ap_reg_ppiten_pp0_it1 , ap_sig_bdd_133 , ap_reg_ppiten_pp0_it2 , ap_reg_ppiten_pp0_it3 , ap_sig_bdd_168 , ap_sig_bdd_196 , ap_sig_bdd_237)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_bdd_87)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                if (not((exitcond_flatten_fu_223_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_7;
                end if;
            when ap_ST_pp0_stg0_fsm_7 => 
                if (not((ap_sig_bdd_133 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) then
                    ap_NS_fsm <= ap_ST_pp0_stg1_fsm_8;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_7;
                end if;
            when ap_ST_pp0_stg1_fsm_8 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and ap_sig_bdd_168))) then
                    ap_NS_fsm <= ap_ST_pp0_stg2_fsm_9;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg1_fsm_8;
                end if;
            when ap_ST_pp0_stg2_fsm_9 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_196))) then
                    ap_NS_fsm <= ap_ST_pp0_stg3_fsm_10;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg2_fsm_9;
                end if;
            when ap_ST_pp0_stg3_fsm_10 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_237)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_ST_pp0_stg3_fsm_10 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_237)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_7;
                elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_ST_pp0_stg3_fsm_10 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_237)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) then
                    ap_NS_fsm <= ap_ST_st24_fsm_11;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg3_fsm_10;
                end if;
            when ap_ST_st24_fsm_11 => 
                ap_NS_fsm <= ap_ST_st25_fsm_12;
            when ap_ST_st25_fsm_12 => 
                ap_NS_fsm <= ap_ST_st26_fsm_13;
            when ap_ST_st26_fsm_13 => 
                ap_NS_fsm <= ap_ST_st27_fsm_14;
            when ap_ST_st27_fsm_14 => 
                ap_NS_fsm <= ap_ST_st28_fsm_15;
            when ap_ST_st28_fsm_15 => 
                ap_NS_fsm <= ap_ST_st29_fsm_16;
            when ap_ST_st29_fsm_16 => 
                ap_NS_fsm <= ap_ST_st30_fsm_17;
            when ap_ST_st30_fsm_17 => 
                if (not((b3_rsp_empty_n = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st31_fsm_18;
                else
                    ap_NS_fsm <= ap_ST_st30_fsm_17;
                end if;
            when ap_ST_st31_fsm_18 => 
                ap_NS_fsm <= ap_ST_st32_fsm_19;
            when ap_ST_st32_fsm_19 => 
                if (not((b3_req_full_n = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st32_fsm_19;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_CS_fsm, exitcond_flatten_fu_223_p2)
    begin
        if (((ap_ST_st7_fsm_6 = ap_CS_fsm) and not((exitcond_flatten_fu_223_p2 = ap_const_lv1_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_CS_fsm)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_CS_fsm, exitcond_flatten_fu_223_p2)
    begin
        if (((ap_ST_st7_fsm_6 = ap_CS_fsm) and not((exitcond_flatten_fu_223_p2 = ap_const_lv1_0)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_133 assign process. --
    ap_sig_bdd_133_assign_proc : process(b1_rsp_empty_n, b2_rsp_empty_n, ap_reg_ppstg_exitcond_reg_645_pp0_it1, ap_reg_ppstg_exitcond_1_reg_661_pp0_it1, ap_reg_ppstg_exitcond_2_reg_682_pp0_it1)
    begin
                ap_sig_bdd_133 <= (((b1_rsp_empty_n = ap_const_logic_0) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_2_reg_682_pp0_it1)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_2_reg_682_pp0_it1) and (b2_rsp_empty_n = ap_const_logic_0)));
    end process;


    -- ap_sig_bdd_168 assign process. --
    ap_sig_bdd_168_assign_proc : process(b1_rsp_empty_n, b2_rsp_empty_n, ap_reg_ppstg_exitcond_1_reg_661_pp0_it1, ap_reg_ppstg_exitcond_2_reg_682_pp0_it1, ap_reg_ppstg_exitcond_reg_645_pp0_it2, ap_reg_ppstg_exitcond_3_reg_703_pp0_it1)
    begin
                ap_sig_bdd_168 <= (((b1_rsp_empty_n = ap_const_logic_0) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_2_reg_682_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_3_reg_703_pp0_it1)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_2_reg_682_pp0_it1) and (b2_rsp_empty_n = ap_const_logic_0) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_3_reg_703_pp0_it1)));
    end process;


    -- ap_sig_bdd_172 assign process. --
    ap_sig_bdd_172_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it2, ap_sig_bdd_168)
    begin
                ap_sig_bdd_172 <= ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_ST_pp0_stg1_fsm_8 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and ap_sig_bdd_168)));
    end process;


    -- ap_sig_bdd_196 assign process. --
    ap_sig_bdd_196_assign_proc : process(b1_rsp_empty_n, b2_rsp_empty_n, ap_reg_ppstg_exitcond_reg_645_pp0_it1)
    begin
                ap_sig_bdd_196 <= (((b1_rsp_empty_n = ap_const_logic_0) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it1)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it1) and (b2_rsp_empty_n = ap_const_logic_0)));
    end process;


    -- ap_sig_bdd_237 assign process. --
    ap_sig_bdd_237_assign_proc : process(b1_rsp_empty_n, b2_rsp_empty_n, ap_reg_ppstg_exitcond_reg_645_pp0_it1, ap_reg_ppstg_exitcond_1_reg_661_pp0_it1)
    begin
                ap_sig_bdd_237 <= (((b1_rsp_empty_n = ap_const_logic_0) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it1)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it1) and (b2_rsp_empty_n = ap_const_logic_0)));
    end process;


    -- ap_sig_bdd_728 assign process. --
    ap_sig_bdd_728_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, exitcond_1_reg_661, ap_sig_bdd_196)
    begin
                ap_sig_bdd_728 <= ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_ST_pp0_stg2_fsm_9 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_196)) and (ap_const_lv1_0 = exitcond_1_reg_661));
    end process;


    -- ap_sig_bdd_733 assign process. --
    ap_sig_bdd_733_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, exitcond_1_reg_661, exitcond_2_reg_682, ap_sig_bdd_237)
    begin
                ap_sig_bdd_733 <= ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond_1_reg_661) and (ap_ST_pp0_stg3_fsm_10 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_237)) and (ap_const_lv1_0 = exitcond_2_reg_682));
    end process;


    -- ap_sig_bdd_737 assign process. --
    ap_sig_bdd_737_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it1, exitcond_1_reg_661, exitcond_2_reg_682, ap_sig_bdd_133, ap_reg_ppiten_pp0_it2, exitcond_3_reg_703)
    begin
                ap_sig_bdd_737 <= ((ap_ST_pp0_stg0_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_133 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))) and (ap_const_lv1_0 = exitcond_1_reg_661) and (ap_const_lv1_0 = exitcond_2_reg_682) and (ap_const_lv1_0 = exitcond_3_reg_703));
    end process;


    -- ap_sig_bdd_739 assign process. --
    ap_sig_bdd_739_assign_proc : process(ap_CS_fsm, ap_sig_bdd_133, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_exitcond_reg_645_pp0_it2)
    begin
                ap_sig_bdd_739 <= ((ap_ST_pp0_stg0_fsm_7 = ap_CS_fsm) and not((ap_sig_bdd_133 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))) and not((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it2)));
    end process;


    -- ap_sig_bdd_742 assign process. --
    ap_sig_bdd_742_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_exitcond_reg_645_pp0_it3, ap_sig_bdd_168, ap_reg_ppstg_exitcond_1_reg_661_pp0_it2)
    begin
                ap_sig_bdd_742 <= ((ap_ST_pp0_stg1_fsm_8 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and ap_sig_bdd_168)) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it3) and not((ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it2)));
    end process;


    -- ap_sig_bdd_746 assign process. --
    ap_sig_bdd_746_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond_reg_645_pp0_it3, ap_reg_ppstg_exitcond_1_reg_661_pp0_it3, ap_sig_bdd_196, ap_reg_ppstg_exitcond_2_reg_682_pp0_it2)
    begin
                ap_sig_bdd_746 <= ((ap_ST_pp0_stg2_fsm_9 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_196)) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it3) and not((ap_const_lv1_0 = ap_reg_ppstg_exitcond_2_reg_682_pp0_it2)));
    end process;


    -- ap_sig_bdd_751 assign process. --
    ap_sig_bdd_751_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond_reg_645_pp0_it3, ap_reg_ppstg_exitcond_1_reg_661_pp0_it3, ap_reg_ppstg_exitcond_2_reg_682_pp0_it3, ap_reg_ppstg_exitcond_3_reg_703_pp0_it3, ap_sig_bdd_237)
    begin
                ap_sig_bdd_751 <= ((ap_ST_pp0_stg3_fsm_10 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_237)) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_2_reg_682_pp0_it3) and not((ap_const_lv1_0 = ap_reg_ppstg_exitcond_3_reg_703_pp0_it3)));
    end process;


    -- ap_sig_bdd_87 assign process. --
    ap_sig_bdd_87_assign_proc : process(ap_start, blockSize_ap_vld)
    begin
                ap_sig_bdd_87 <= ((blockSize_ap_vld = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    -- b1_address assign process. --
    b1_address_assign_proc : process(exitcond_reg_645, b1_addr_reg_649, b1_addr_1_reg_665, b1_addr_2_reg_686, b1_addr_3_reg_712, ap_sig_bdd_172, ap_sig_bdd_728, ap_sig_bdd_733, ap_sig_bdd_737)
    begin
        if ((ap_const_lv1_0 = exitcond_reg_645)) then
            if (ap_sig_bdd_737) then 
                b1_address <= b1_addr_3_reg_712;
            elsif (ap_sig_bdd_733) then 
                b1_address <= b1_addr_2_reg_686;
            elsif (ap_sig_bdd_728) then 
                b1_address <= b1_addr_1_reg_665;
            elsif (ap_sig_bdd_172) then 
                b1_address <= b1_addr_reg_649;
            else 
                b1_address <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            b1_address <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    b1_dataout <= ap_const_lv32_0;
    b1_req_din <= ap_const_logic_0;

    -- b1_req_write assign process. --
    b1_req_write_assign_proc : process(ap_CS_fsm, exitcond_reg_645, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, exitcond_1_reg_661, exitcond_2_reg_682, ap_sig_bdd_133, ap_reg_ppiten_pp0_it2, exitcond_3_reg_703, ap_sig_bdd_168, ap_sig_bdd_196, ap_sig_bdd_237)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_ST_pp0_stg1_fsm_8 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and ap_sig_bdd_168)) and (ap_const_lv1_0 = exitcond_reg_645)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond_reg_645) and (ap_ST_pp0_stg2_fsm_9 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_196)) and (ap_const_lv1_0 = exitcond_1_reg_661)) or ((ap_ST_pp0_stg0_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_133 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))) and (ap_const_lv1_0 = exitcond_reg_645) and (ap_const_lv1_0 = exitcond_1_reg_661) and (ap_const_lv1_0 = exitcond_2_reg_682) and (ap_const_lv1_0 = exitcond_3_reg_703)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond_reg_645) and (ap_const_lv1_0 = exitcond_1_reg_661) and (ap_ST_pp0_stg3_fsm_10 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_237)) and (ap_const_lv1_0 = exitcond_2_reg_682)))) then 
            b1_req_write <= ap_const_logic_1;
        else 
            b1_req_write <= ap_const_logic_0;
        end if; 
    end process;


    -- b1_rsp_read assign process. --
    b1_rsp_read_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond_reg_645_pp0_it1, ap_reg_ppstg_exitcond_1_reg_661_pp0_it1, ap_reg_ppstg_exitcond_2_reg_682_pp0_it1, ap_sig_bdd_133, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_exitcond_reg_645_pp0_it2, ap_reg_ppstg_exitcond_3_reg_703_pp0_it1, ap_sig_bdd_168, ap_sig_bdd_196, ap_sig_bdd_237)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it1) and (ap_ST_pp0_stg2_fsm_9 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_196))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it1) and (ap_ST_pp0_stg3_fsm_10 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_237))) or ((ap_ST_pp0_stg0_fsm_7 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_2_reg_682_pp0_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_sig_bdd_133 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_2_reg_682_pp0_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_ST_pp0_stg1_fsm_8 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_3_reg_703_pp0_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and ap_sig_bdd_168))))) then 
            b1_rsp_read <= ap_const_logic_1;
        else 
            b1_rsp_read <= ap_const_logic_0;
        end if; 
    end process;

    b1_size <= ap_const_lv32_1;

    -- b2_address assign process. --
    b2_address_assign_proc : process(exitcond_reg_645, b2_addr_reg_655, b2_addr_1_reg_671, b2_addr_2_reg_692, b2_addr_3_reg_718, ap_sig_bdd_172, ap_sig_bdd_728, ap_sig_bdd_733, ap_sig_bdd_737)
    begin
        if ((ap_const_lv1_0 = exitcond_reg_645)) then
            if (ap_sig_bdd_737) then 
                b2_address <= b2_addr_3_reg_718;
            elsif (ap_sig_bdd_733) then 
                b2_address <= b2_addr_2_reg_692;
            elsif (ap_sig_bdd_728) then 
                b2_address <= b2_addr_1_reg_671;
            elsif (ap_sig_bdd_172) then 
                b2_address <= b2_addr_reg_655;
            else 
                b2_address <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            b2_address <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    b2_dataout <= ap_const_lv32_0;
    b2_req_din <= ap_const_logic_0;

    -- b2_req_write assign process. --
    b2_req_write_assign_proc : process(ap_CS_fsm, exitcond_reg_645, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, exitcond_1_reg_661, exitcond_2_reg_682, ap_sig_bdd_133, ap_reg_ppiten_pp0_it2, exitcond_3_reg_703, ap_sig_bdd_168, ap_sig_bdd_196, ap_sig_bdd_237)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_ST_pp0_stg1_fsm_8 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and ap_sig_bdd_168)) and (ap_const_lv1_0 = exitcond_reg_645)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond_reg_645) and (ap_ST_pp0_stg2_fsm_9 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_196)) and (ap_const_lv1_0 = exitcond_1_reg_661)) or ((ap_ST_pp0_stg0_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_133 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))) and (ap_const_lv1_0 = exitcond_reg_645) and (ap_const_lv1_0 = exitcond_1_reg_661) and (ap_const_lv1_0 = exitcond_2_reg_682) and (ap_const_lv1_0 = exitcond_3_reg_703)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond_reg_645) and (ap_const_lv1_0 = exitcond_1_reg_661) and (ap_ST_pp0_stg3_fsm_10 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_237)) and (ap_const_lv1_0 = exitcond_2_reg_682)))) then 
            b2_req_write <= ap_const_logic_1;
        else 
            b2_req_write <= ap_const_logic_0;
        end if; 
    end process;


    -- b2_rsp_read assign process. --
    b2_rsp_read_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond_reg_645_pp0_it1, ap_reg_ppstg_exitcond_1_reg_661_pp0_it1, ap_reg_ppstg_exitcond_2_reg_682_pp0_it1, ap_sig_bdd_133, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_exitcond_reg_645_pp0_it2, ap_reg_ppstg_exitcond_3_reg_703_pp0_it1, ap_sig_bdd_168, ap_sig_bdd_196, ap_sig_bdd_237)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it1) and (ap_ST_pp0_stg2_fsm_9 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_196))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it1) and (ap_ST_pp0_stg3_fsm_10 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_237))) or ((ap_ST_pp0_stg0_fsm_7 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_2_reg_682_pp0_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_sig_bdd_133 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_2_reg_682_pp0_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_ST_pp0_stg1_fsm_8 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_3_reg_703_pp0_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and ap_sig_bdd_168))))) then 
            b2_rsp_read <= ap_const_logic_1;
        else 
            b2_rsp_read <= ap_const_logic_0;
        end if; 
    end process;

    b2_size <= ap_const_lv32_1;
    b3_address <= b3_addr_reg_796;
    b3_dataout <= tmp_4_reg_812;

    -- b3_req_din assign process. --
    b3_req_din_assign_proc : process(ap_CS_fsm, b3_req_full_n)
    begin
        if ((((ap_ST_st32_fsm_19 = ap_CS_fsm) and not((b3_req_full_n = ap_const_logic_0))))) then 
            b3_req_din <= ap_const_logic_1;
        elsif ((ap_ST_st25_fsm_12 = ap_CS_fsm)) then 
            b3_req_din <= ap_const_logic_0;
        else 
            b3_req_din <= ap_const_logic_0;
        end if; 
    end process;


    -- b3_req_write assign process. --
    b3_req_write_assign_proc : process(ap_CS_fsm, b3_req_full_n)
    begin
        if ((((ap_ST_st32_fsm_19 = ap_CS_fsm) and not((b3_req_full_n = ap_const_logic_0))) or (ap_ST_st25_fsm_12 = ap_CS_fsm))) then 
            b3_req_write <= ap_const_logic_1;
        else 
            b3_req_write <= ap_const_logic_0;
        end if; 
    end process;


    -- b3_rsp_read assign process. --
    b3_rsp_read_assign_proc : process(ap_CS_fsm, b3_rsp_empty_n)
    begin
        if (((ap_ST_st30_fsm_17 = ap_CS_fsm) and not((b3_rsp_empty_n = ap_const_logic_0)))) then 
            b3_rsp_read <= ap_const_logic_1;
        else 
            b3_rsp_read <= ap_const_logic_0;
        end if; 
    end process;

    b3_size <= ap_const_lv32_1;

    -- blockSize_ap_ack assign process. --
    blockSize_ap_ack_assign_proc : process(ap_CS_fsm, ap_sig_bdd_87)
    begin
        if (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not(ap_sig_bdd_87))) then 
            blockSize_ap_ack <= ap_const_logic_1;
        else 
            blockSize_ap_ack <= ap_const_logic_0;
        end if; 
    end process;

    cast_fu_213_p1 <= std_logic_vector(resize(unsigned(blockSize),64));
    exitcond1_fu_234_p2 <= "1" when (j_reg_162 = blockSize_read_reg_589) else "0";
    exitcond_1_fu_346_p2 <= "1" when (k_1_s_fu_338_p3 = blockSize_read_reg_589) else "0";
    exitcond_2_fu_415_p2 <= "1" when (k_1_1_fu_407_p3 = blockSize_read_reg_589) else "0";
    exitcond_3_fu_474_p2 <= "1" when (k_1_2_fu_466_p3 = blockSize_read_reg_589) else "0";
    exitcond_flatten_fu_223_p2 <= "1" when (indvar_flatten_reg_140 = bound_reg_604) else "0";
    exitcond_fu_277_p2 <= "1" when (k_phi_fu_177_p4 = blockSize_read_reg_589) else "0";

    -- grp_fu_217_ce assign process. --
    grp_fu_217_ce_assign_proc : process(ap_CS_fsm, ap_sig_bdd_87)
    begin
        if ((((ap_ST_st1_fsm_0 = ap_CS_fsm) and not(ap_sig_bdd_87)) or (ap_ST_st6_fsm_5 = ap_CS_fsm) or (ap_ST_st2_fsm_1 = ap_CS_fsm) or (ap_ST_st3_fsm_2 = ap_CS_fsm) or (ap_ST_st4_fsm_3 = ap_CS_fsm) or (ap_ST_st5_fsm_4 = ap_CS_fsm))) then 
            grp_fu_217_ce <= ap_const_logic_1;
        else 
            grp_fu_217_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_217_p0 <= cast_fu_213_p1(32 - 1 downto 0);
    grp_fu_217_p1 <= cast_fu_213_p1(32 - 1 downto 0);

    -- grp_fu_529_ce assign process. --
    grp_fu_529_ce_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond_reg_645_pp0_it1, ap_sig_bdd_133, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_exitcond_reg_645_pp0_it2, ap_sig_bdd_168, ap_sig_bdd_196, ap_sig_bdd_237)
    begin
        if ((((ap_ST_pp0_stg3_fsm_10 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_237)) and ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it1) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it2))) or ((ap_ST_pp0_stg0_fsm_7 = ap_CS_fsm) and not((ap_sig_bdd_133 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))) and ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it1) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it2))) or ((ap_ST_pp0_stg1_fsm_8 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and ap_sig_bdd_168))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it2) and (ap_ST_pp0_stg2_fsm_9 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_196))))) then 
            grp_fu_529_ce <= ap_const_logic_1;
        else 
            grp_fu_529_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_529_p0 <= b2_addr_read_reg_729;
    grp_fu_529_p1 <= b1_addr_read_reg_724;

    -- grp_fu_533_ce assign process. --
    grp_fu_533_ce_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond_reg_645_pp0_it1, ap_reg_ppstg_exitcond_1_reg_661_pp0_it1, ap_sig_bdd_133, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_exitcond_reg_645_pp0_it2, ap_reg_ppstg_exitcond_reg_645_pp0_it3, ap_sig_bdd_168, ap_reg_ppstg_exitcond_1_reg_661_pp0_it2, ap_sig_bdd_196, ap_sig_bdd_237)
    begin
        if ((((ap_ST_pp0_stg0_fsm_7 = ap_CS_fsm) and not((ap_sig_bdd_133 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))) and (((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it1)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it2)))) or ((ap_ST_pp0_stg1_fsm_8 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and ap_sig_bdd_168)) and (((ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it2)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it2)))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it2) and (ap_ST_pp0_stg2_fsm_9 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_196)) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it2)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it2) and (ap_ST_pp0_stg3_fsm_10 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_237)) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it2)))) then 
            grp_fu_533_ce <= ap_const_logic_1;
        else 
            grp_fu_533_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_533_p0 <= b2_addr_1_read_reg_739;
    grp_fu_533_p1 <= b1_addr_1_read_reg_734;

    -- grp_fu_537_ce assign process. --
    grp_fu_537_ce_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond_1_reg_661_pp0_it1, ap_reg_ppstg_exitcond_2_reg_682_pp0_it1, ap_sig_bdd_133, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_exitcond_reg_645_pp0_it2, ap_reg_ppstg_exitcond_reg_645_pp0_it3, ap_sig_bdd_168, ap_reg_ppstg_exitcond_1_reg_661_pp0_it2, ap_reg_ppstg_exitcond_1_reg_661_pp0_it3, ap_sig_bdd_196, ap_reg_ppstg_exitcond_2_reg_682_pp0_it2, ap_sig_bdd_237)
    begin
        if ((((ap_ST_pp0_stg1_fsm_8 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and ap_sig_bdd_168)) and (((ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_2_reg_682_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it2)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_2_reg_682_pp0_it2)))) or ((ap_ST_pp0_stg2_fsm_9 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_196)) and (((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_2_reg_682_pp0_it2)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_2_reg_682_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it2)))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it2) and (ap_ST_pp0_stg3_fsm_10 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_237)) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_2_reg_682_pp0_it2)) or ((ap_ST_pp0_stg0_fsm_7 = ap_CS_fsm) and not((ap_sig_bdd_133 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_2_reg_682_pp0_it2)))) then 
            grp_fu_537_ce <= ap_const_logic_1;
        else 
            grp_fu_537_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_537_p0 <= b2_addr_2_read_reg_749;
    grp_fu_537_p1 <= b1_addr_2_read_reg_744;

    -- grp_fu_541_ce assign process. --
    grp_fu_541_ce_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond_2_reg_682_pp0_it1, ap_sig_bdd_133, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_exitcond_reg_645_pp0_it2, ap_reg_ppstg_exitcond_reg_645_pp0_it3, ap_reg_ppstg_exitcond_3_reg_703_pp0_it1, ap_sig_bdd_168, ap_reg_ppstg_exitcond_1_reg_661_pp0_it2, ap_reg_ppstg_exitcond_1_reg_661_pp0_it3, ap_sig_bdd_196, ap_reg_ppstg_exitcond_2_reg_682_pp0_it2, ap_reg_ppstg_exitcond_2_reg_682_pp0_it3, ap_reg_ppstg_exitcond_3_reg_703_pp0_it2, ap_reg_ppstg_exitcond_3_reg_703_pp0_it3, ap_sig_bdd_237)
    begin
        if ((((ap_ST_pp0_stg2_fsm_9 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_196)) and (((ap_const_lv1_0 = ap_reg_ppstg_exitcond_2_reg_682_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_3_reg_703_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it2)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_2_reg_682_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_3_reg_703_pp0_it2)))) or ((ap_ST_pp0_stg3_fsm_10 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_bdd_237)) and (((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_2_reg_682_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_3_reg_703_pp0_it3)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_2_reg_682_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_3_reg_703_pp0_it2)))) or ((ap_ST_pp0_stg0_fsm_7 = ap_CS_fsm) and not((ap_sig_bdd_133 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_2_reg_682_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_3_reg_703_pp0_it2)) or ((ap_ST_pp0_stg1_fsm_8 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and ap_sig_bdd_168)) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_645_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_1_reg_661_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_2_reg_682_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_3_reg_703_pp0_it2)))) then 
            grp_fu_541_ce <= ap_const_logic_1;
        else 
            grp_fu_541_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_541_p0 <= b2_addr_3_read_reg_759;
    grp_fu_541_p1 <= b1_addr_3_read_reg_754;
    i_mid2_fu_253_p3 <= 
        i_s_fu_247_p2 when (exitcond1_fu_234_p2(0) = '1') else 
        i_reg_151;
    i_s_fu_247_p2 <= std_logic_vector(unsigned(i_reg_151) + unsigned(ap_const_lv32_1));
    indvar_flatten_next_fu_228_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_140) + unsigned(ap_const_lv64_1));
    j_1_fu_579_p2 <= std_logic_vector(unsigned(j_mid2_reg_617) + unsigned(ap_const_lv32_1));
    j_mid2_fu_239_p3 <= 
        ap_const_lv32_0 when (exitcond1_fu_234_p2(0) = '1') else 
        j_reg_162;
    k_1_1_fu_407_p3 <= (tmp_13_fu_397_p4 & ap_const_lv2_2);
    k_1_2_fu_466_p3 <= (tmp_13_fu_397_p4 & ap_const_lv2_3);
    k_1_3_fu_479_p2 <= std_logic_vector(unsigned(k_reg_173) + unsigned(ap_const_lv32_4));
    k_1_s_fu_338_p3 <= (tmp_fu_328_p4 & ap_const_lv1_1);

    -- k_phi_fu_177_p4 assign process. --
    k_phi_fu_177_p4_assign_proc : process(ap_CS_fsm, k_reg_173, exitcond_reg_645, ap_reg_ppiten_pp0_it1, exitcond_1_reg_661, exitcond_2_reg_682, exitcond_3_reg_703, k_1_3_reg_707)
    begin
        if (((ap_ST_pp0_stg0_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond_reg_645) and (ap_const_lv1_0 = exitcond_1_reg_661) and (ap_const_lv1_0 = exitcond_2_reg_682) and (ap_const_lv1_0 = exitcond_3_reg_703))) then 
            k_phi_fu_177_p4 <= k_1_3_reg_707;
        else 
            k_phi_fu_177_p4 <= k_reg_173;
        end if; 
    end process;

    tmpVal_1_1_fu_551_p2 <= std_logic_vector(unsigned(tmp_7_1_reg_770) + unsigned(tmpVal_1_reg_764));
    tmpVal_1_2_fu_555_p2 <= std_logic_vector(unsigned(tmp_7_2_reg_781) + unsigned(tmpVal_1_1_reg_775));
    tmpVal_1_3_fu_559_p2 <= std_logic_vector(unsigned(grp_fu_541_p2) + unsigned(tmpVal_1_2_fu_555_p2));
    tmpVal_1_fu_545_p2 <= std_logic_vector(unsigned(grp_fu_529_p2) + unsigned(tmpVal_reg_185));
    
    k_1_1_fu_407_p3_temp <= signed(k_1_1_fu_407_p3);
    tmp_10_fu_424_p1 <= std_logic_vector(resize(k_1_1_fu_407_p3_temp,40));

    tmp_10_fu_424_p2 <= std_logic_vector(unsigned(tmp_5_cast_reg_627) + unsigned(tmp_10_fu_424_p1));
    
    tmp_1_fu_355_p2_temp <= signed(tmp_1_fu_355_p2);
    tmp_11_cast_fu_360_p1 <= std_logic_vector(resize(tmp_1_fu_355_p2_temp,64));

    tmp_11_fu_439_p3 <= (tmp_13_fu_397_p4 & ap_const_lv9_100);
    
    tmp_11_fu_439_p3_temp <= signed(tmp_11_fu_439_p3);
    tmp_12_fu_451_p0 <= std_logic_vector(resize(tmp_11_fu_439_p3_temp,40));

    tmp_12_fu_451_p2 <= std_logic_vector(unsigned(tmp_12_fu_451_p0) + unsigned(tmp_3_cast_reg_636));
    
    tmp_6_fu_382_p2_temp <= signed(tmp_6_fu_382_p2);
    tmp_13_cast_fu_387_p1 <= std_logic_vector(resize(tmp_6_fu_382_p2_temp,64));

    tmp_13_fu_397_p4 <= k_reg_173(31 downto 2);
    tmp_14_fu_565_p2 <= std_logic_vector(unsigned(tmp_5_cast_reg_627) + unsigned(tmp_3_cast_reg_636));
    
    tmp_10_fu_424_p2_temp <= signed(tmp_10_fu_424_p2);
    tmp_15_cast_fu_429_p1 <= std_logic_vector(resize(tmp_10_fu_424_p2_temp,64));

    
    k_1_2_reg_698_temp <= signed(k_1_2_reg_698);
    tmp_15_fu_488_p1 <= std_logic_vector(resize(k_1_2_reg_698_temp,40));

    tmp_15_fu_488_p2 <= std_logic_vector(unsigned(tmp_5_cast_reg_627) + unsigned(tmp_15_fu_488_p1));
    tmp_16_fu_503_p3 <= (tmp_13_reg_677 & ap_const_lv9_180);
    
    tmp_12_fu_451_p2_temp <= signed(tmp_12_fu_451_p2);
    tmp_17_cast_fu_456_p1 <= std_logic_vector(resize(tmp_12_fu_451_p2_temp,64));

    
    tmp_16_fu_503_p3_temp <= signed(tmp_16_fu_503_p3);
    tmp_17_fu_514_p0 <= std_logic_vector(resize(tmp_16_fu_503_p3_temp,40));

    tmp_17_fu_514_p2 <= std_logic_vector(unsigned(tmp_17_fu_514_p0) + unsigned(tmp_3_cast_reg_636));
    
    tmp_14_fu_565_p2_temp <= signed(tmp_14_fu_565_p2);
    tmp_19_cast_fu_569_p1 <= std_logic_vector(resize(tmp_14_fu_565_p2_temp,64));

    
    k_1_s_fu_338_p3_temp <= signed(k_1_s_fu_338_p3);
    tmp_1_fu_355_p1 <= std_logic_vector(resize(k_1_s_fu_338_p3_temp,40));

    tmp_1_fu_355_p2 <= std_logic_vector(unsigned(tmp_5_cast_reg_627) + unsigned(tmp_1_fu_355_p1));
    
    tmp_15_fu_488_p2_temp <= signed(tmp_15_fu_488_p2);
    tmp_21_cast_fu_493_p1 <= std_logic_vector(resize(tmp_15_fu_488_p2_temp,64));

    
    tmp_17_fu_514_p2_temp <= signed(tmp_17_fu_514_p2);
    tmp_23_cast_fu_519_p1 <= std_logic_vector(resize(tmp_17_fu_514_p2_temp,64));

    
    j_mid2_fu_239_p3_temp <= signed(j_mid2_fu_239_p3);
    tmp_3_cast_fu_273_p1 <= std_logic_vector(resize(j_mid2_fu_239_p3_temp,40));

    tmp_3_fu_370_p3 <= (tmp_fu_328_p4 & ap_const_lv8_80);
    tmp_4_fu_584_p2 <= std_logic_vector(unsigned(b3_addr_read_reg_807) + unsigned(tmpVal_lcssa_reg_197));
    
    tmp_5_fu_261_p3_temp <= signed(tmp_5_fu_261_p3);
    tmp_5_cast_fu_269_p1 <= std_logic_vector(resize(tmp_5_fu_261_p3_temp,40));

    tmp_5_fu_261_p3 <= (i_mid2_fu_253_p3 & ap_const_lv7_0);
    
    tmp_3_fu_370_p3_temp <= signed(tmp_3_fu_370_p3);
    tmp_6_fu_382_p0 <= std_logic_vector(resize(tmp_3_fu_370_p3_temp,40));

    tmp_6_fu_382_p2 <= std_logic_vector(unsigned(tmp_6_fu_382_p0) + unsigned(tmp_3_cast_reg_636));
    
    tmp_7_fu_286_p2_temp <= signed(tmp_7_fu_286_p2);
    tmp_7_cast_fu_291_p1 <= std_logic_vector(resize(tmp_7_fu_286_p2_temp,64));

    
    k_phi_fu_177_p4_temp <= signed(k_phi_fu_177_p4);
    tmp_7_fu_286_p1 <= std_logic_vector(resize(k_phi_fu_177_p4_temp,40));

    tmp_7_fu_286_p2 <= std_logic_vector(unsigned(tmp_5_cast_reg_627) + unsigned(tmp_7_fu_286_p1));
    tmp_8_fu_301_p3 <= (k_phi_fu_177_p4 & ap_const_lv7_0);
    
    tmp_9_fu_313_p2_temp <= signed(tmp_9_fu_313_p2);
    tmp_9_cast_fu_318_p1 <= std_logic_vector(resize(tmp_9_fu_313_p2_temp,64));

    
    tmp_8_fu_301_p3_temp <= signed(tmp_8_fu_301_p3);
    tmp_9_fu_313_p0 <= std_logic_vector(resize(tmp_8_fu_301_p3_temp,40));

    tmp_9_fu_313_p2 <= std_logic_vector(unsigned(tmp_9_fu_313_p0) + unsigned(tmp_3_cast_reg_636));
    tmp_fu_328_p4 <= k_reg_173(31 downto 1);
end behav;
