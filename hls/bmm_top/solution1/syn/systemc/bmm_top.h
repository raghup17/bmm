// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.3
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _bmm_top_HH_
#define _bmm_top_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "bmm_top_mul_32s_32s_32_6.h"

namespace ap_rtl {

struct bmm_top : public sc_module {
    // Port declarations 33
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > b1_req_din;
    sc_in< sc_logic > b1_req_full_n;
    sc_out< sc_logic > b1_req_write;
    sc_in< sc_logic > b1_rsp_empty_n;
    sc_out< sc_logic > b1_rsp_read;
    sc_out< sc_lv<32> > b1_address;
    sc_in< sc_lv<32> > b1_datain;
    sc_out< sc_lv<32> > b1_dataout;
    sc_out< sc_lv<32> > b1_size;
    sc_out< sc_logic > b2_req_din;
    sc_in< sc_logic > b2_req_full_n;
    sc_out< sc_logic > b2_req_write;
    sc_in< sc_logic > b2_rsp_empty_n;
    sc_out< sc_logic > b2_rsp_read;
    sc_out< sc_lv<32> > b2_address;
    sc_in< sc_lv<32> > b2_datain;
    sc_out< sc_lv<32> > b2_dataout;
    sc_out< sc_lv<32> > b2_size;
    sc_out< sc_logic > b3_req_din;
    sc_in< sc_logic > b3_req_full_n;
    sc_out< sc_logic > b3_req_write;
    sc_in< sc_logic > b3_rsp_empty_n;
    sc_out< sc_logic > b3_rsp_read;
    sc_out< sc_lv<32> > b3_address;
    sc_in< sc_lv<32> > b3_datain;
    sc_out< sc_lv<32> > b3_dataout;
    sc_out< sc_lv<32> > b3_size;


    // Module declarations
    bmm_top(sc_module_name name);
    SC_HAS_PROCESS(bmm_top);

    ~bmm_top();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    bmm_top_mul_32s_32s_32_6<1,6,32,32,32>* bmm_top_mul_32s_32s_32_6_U1;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_lv<7> > i_1_fu_142_p2;
    sc_signal< sc_lv<7> > i_1_reg_266;
    sc_signal< sc_lv<12> > tmp_7_fu_152_p3;
    sc_signal< sc_lv<12> > tmp_7_reg_271;
    sc_signal< sc_lv<1> > exitcond3_fu_136_p2;
    sc_signal< sc_lv<7> > j_1_fu_166_p2;
    sc_signal< sc_lv<7> > j_1_reg_280;
    sc_signal< sc_lv<12> > tmp_2_cast_fu_172_p1;
    sc_signal< sc_lv<12> > tmp_2_cast_reg_285;
    sc_signal< sc_lv<1> > exitcond2_fu_160_p2;
    sc_signal< sc_lv<7> > k_1_fu_182_p2;
    sc_signal< sc_lv<7> > k_1_reg_294;
    sc_signal< sc_lv<12> > tmp_8_fu_192_p2;
    sc_signal< sc_lv<12> > tmp_8_reg_299;
    sc_signal< sc_lv<1> > exitcond_fu_176_p2;
    sc_signal< sc_lv<12> > tmp_s_fu_209_p2;
    sc_signal< sc_lv<12> > tmp_s_reg_304;
    sc_signal< sc_lv<12> > tmp_4_fu_214_p2;
    sc_signal< sc_lv<12> > tmp_4_reg_309;
    sc_signal< sc_lv<32> > b1_addr_read_reg_326;
    sc_signal< bool > ap_sig_bdd_121;
    sc_signal< sc_lv<32> > b2_addr_read_reg_331;
    sc_signal< sc_lv<32> > tmpVal_1_fu_242_p2;
    sc_signal< sc_lv<32> > b3_addr_reg_341;
    sc_signal< sc_lv<32> > b3_addr_read_reg_347;
    sc_signal< sc_lv<32> > tmp_3_fu_258_p2;
    sc_signal< sc_lv<32> > tmp_3_reg_352;
    sc_signal< sc_lv<7> > i_reg_90;
    sc_signal< sc_lv<7> > j_reg_101;
    sc_signal< sc_lv<7> > k_reg_112;
    sc_signal< sc_lv<32> > tmpVal_reg_123;
    sc_signal< sc_lv<64> > tmp_8_cast_fu_218_p1;
    sc_signal< sc_lv<64> > tmp_cast_fu_228_p1;
    sc_signal< sc_lv<64> > tmp_4_cast_fu_248_p1;
    sc_signal< sc_lv<6> > tmp_fu_148_p1;
    sc_signal< sc_lv<12> > tmp_5_cast_fu_188_p1;
    sc_signal< sc_lv<6> > tmp_1_fu_197_p1;
    sc_signal< sc_lv<12> > tmp_9_fu_201_p3;
    sc_signal< sc_lv<32> > grp_fu_238_p0;
    sc_signal< sc_lv<32> > grp_fu_238_p1;
    sc_signal< sc_lv<32> > grp_fu_238_p2;
    sc_signal< sc_logic > grp_fu_238_ce;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_st1_fsm_0;
    static const sc_lv<5> ap_ST_st2_fsm_1;
    static const sc_lv<5> ap_ST_st3_fsm_2;
    static const sc_lv<5> ap_ST_st4_fsm_3;
    static const sc_lv<5> ap_ST_st5_fsm_4;
    static const sc_lv<5> ap_ST_st6_fsm_5;
    static const sc_lv<5> ap_ST_st7_fsm_6;
    static const sc_lv<5> ap_ST_st8_fsm_7;
    static const sc_lv<5> ap_ST_st9_fsm_8;
    static const sc_lv<5> ap_ST_st10_fsm_9;
    static const sc_lv<5> ap_ST_st11_fsm_10;
    static const sc_lv<5> ap_ST_st12_fsm_11;
    static const sc_lv<5> ap_ST_st13_fsm_12;
    static const sc_lv<5> ap_ST_st14_fsm_13;
    static const sc_lv<5> ap_ST_st15_fsm_14;
    static const sc_lv<5> ap_ST_st16_fsm_15;
    static const sc_lv<5> ap_ST_st17_fsm_16;
    static const sc_lv<5> ap_ST_st18_fsm_17;
    static const sc_lv<5> ap_ST_st19_fsm_18;
    static const sc_lv<5> ap_ST_st20_fsm_19;
    static const sc_lv<5> ap_ST_st21_fsm_20;
    static const sc_lv<5> ap_ST_st22_fsm_21;
    static const sc_lv<5> ap_ST_st23_fsm_22;
    static const sc_lv<5> ap_ST_st24_fsm_23;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<7> ap_const_lv7_40;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<6> ap_const_lv6_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_121();
    void thread_b1_address();
    void thread_b1_dataout();
    void thread_b1_req_din();
    void thread_b1_req_write();
    void thread_b1_rsp_read();
    void thread_b1_size();
    void thread_b2_address();
    void thread_b2_dataout();
    void thread_b2_req_din();
    void thread_b2_req_write();
    void thread_b2_rsp_read();
    void thread_b2_size();
    void thread_b3_address();
    void thread_b3_dataout();
    void thread_b3_req_din();
    void thread_b3_req_write();
    void thread_b3_rsp_read();
    void thread_b3_size();
    void thread_exitcond2_fu_160_p2();
    void thread_exitcond3_fu_136_p2();
    void thread_exitcond_fu_176_p2();
    void thread_grp_fu_238_ce();
    void thread_grp_fu_238_p0();
    void thread_grp_fu_238_p1();
    void thread_i_1_fu_142_p2();
    void thread_j_1_fu_166_p2();
    void thread_k_1_fu_182_p2();
    void thread_tmpVal_1_fu_242_p2();
    void thread_tmp_1_fu_197_p1();
    void thread_tmp_2_cast_fu_172_p1();
    void thread_tmp_3_fu_258_p2();
    void thread_tmp_4_cast_fu_248_p1();
    void thread_tmp_4_fu_214_p2();
    void thread_tmp_5_cast_fu_188_p1();
    void thread_tmp_7_fu_152_p3();
    void thread_tmp_8_cast_fu_218_p1();
    void thread_tmp_8_fu_192_p2();
    void thread_tmp_9_fu_201_p3();
    void thread_tmp_cast_fu_228_p1();
    void thread_tmp_fu_148_p1();
    void thread_tmp_s_fu_209_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
