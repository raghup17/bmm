// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.3
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _bmm_top_HH_
#define _bmm_top_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "bmm_top_mul_32s_32s_32_6.h"

namespace ap_rtl {

struct bmm_top : public sc_module {
    // Port declarations 36
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > b1_req_din;
    sc_in< sc_logic > b1_req_full_n;
    sc_out< sc_logic > b1_req_write;
    sc_in< sc_logic > b1_rsp_empty_n;
    sc_out< sc_logic > b1_rsp_read;
    sc_out< sc_lv<32> > b1_address;
    sc_in< sc_lv<256> > b1_datain;
    sc_out< sc_lv<256> > b1_dataout;
    sc_out< sc_lv<32> > b1_size;
    sc_out< sc_logic > b2_req_din;
    sc_in< sc_logic > b2_req_full_n;
    sc_out< sc_logic > b2_req_write;
    sc_in< sc_logic > b2_rsp_empty_n;
    sc_out< sc_logic > b2_rsp_read;
    sc_out< sc_lv<32> > b2_address;
    sc_in< sc_lv<256> > b2_datain;
    sc_out< sc_lv<256> > b2_dataout;
    sc_out< sc_lv<32> > b2_size;
    sc_out< sc_logic > b3_req_din;
    sc_in< sc_logic > b3_req_full_n;
    sc_out< sc_logic > b3_req_write;
    sc_in< sc_logic > b3_rsp_empty_n;
    sc_out< sc_logic > b3_rsp_read;
    sc_out< sc_lv<32> > b3_address;
    sc_in< sc_lv<256> > b3_datain;
    sc_out< sc_lv<256> > b3_dataout;
    sc_out< sc_lv<32> > b3_size;
    sc_in< sc_lv<32> > blockSize;
    sc_in< sc_logic > blockSize_ap_vld;
    sc_out< sc_logic > blockSize_ap_ack;


    // Module declarations
    bmm_top(sc_module_name name);
    SC_HAS_PROCESS(bmm_top);

    ~bmm_top();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    bmm_top_mul_32s_32s_32_6<1,6,32,32,32>* bmm_top_mul_32s_32s_32_6_U1;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< bool > ap_sig_bdd_76;
    sc_signal< sc_lv<32> > tmp_fu_159_p2;
    sc_signal< sc_lv<32> > tmp_reg_301;
    sc_signal< sc_lv<32> > tmp_2_fu_177_p2;
    sc_signal< sc_lv<32> > tmp_2_reg_306;
    sc_signal< sc_lv<32> > tmp_4_fu_189_p2;
    sc_signal< sc_lv<32> > tmp_4_reg_311;
    sc_signal< sc_lv<29> > tmp_s_reg_316;
    sc_signal< sc_lv<29> > i_1_fu_228_p2;
    sc_signal< sc_lv<29> > i_1_reg_325;
    sc_signal< sc_lv<1> > exitcond1_fu_223_p2;
    sc_signal< sc_lv<29> > i_2_fu_264_p2;
    sc_signal< sc_lv<1> > exitcond_fu_259_p2;
    sc_signal< bool > ap_sig_bdd_114;
    sc_signal< sc_lv<29> > i_reg_124;
    sc_signal< bool > ap_sig_bdd_126;
    sc_signal< sc_lv<29> > i5_reg_135;
    sc_signal< sc_lv<64> > tmp_8_fu_234_p1;
    sc_signal< sc_lv<64> > tmp_9_fu_270_p1;
    sc_signal< bool > ap_sig_bdd_144;
    sc_signal< sc_lv<256> > tmp_1_fu_201_p1;
    sc_signal< sc_lv<256> > tmp_3_fu_205_p1;
    sc_signal< sc_lv<256> > tmp_5_fu_209_p1;
    sc_signal< sc_lv<32> > tmp_7_fu_147_p0;
    sc_signal< sc_lv<32> > tmp_10_fu_153_p0;
    sc_signal< sc_lv<32> > tmp_7_fu_147_p2;
    sc_signal< sc_lv<32> > tmp_10_fu_153_p2;
    sc_signal< sc_lv<32> > tmp_11_fu_165_p0;
    sc_signal< sc_lv<32> > tmp_12_fu_171_p0;
    sc_signal< sc_lv<32> > tmp_11_fu_165_p2;
    sc_signal< sc_lv<32> > tmp_12_fu_171_p2;
    sc_signal< sc_lv<32> > tmp_13_fu_183_p0;
    sc_signal< sc_lv<32> > tmp_13_fu_183_p2;
    sc_signal< sc_lv<32> > grp_fu_195_p0;
    sc_signal< sc_lv<32> > grp_fu_195_p1;
    sc_signal< sc_lv<32> > grp_fu_195_p2;
    sc_signal< sc_logic > grp_fu_195_ce;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_st1_fsm_0;
    static const sc_lv<4> ap_ST_st2_fsm_1;
    static const sc_lv<4> ap_ST_st3_fsm_2;
    static const sc_lv<4> ap_ST_st4_fsm_3;
    static const sc_lv<4> ap_ST_st5_fsm_4;
    static const sc_lv<4> ap_ST_st6_fsm_5;
    static const sc_lv<4> ap_ST_st7_fsm_6;
    static const sc_lv<4> ap_ST_st8_fsm_7;
    static const sc_lv<4> ap_ST_st9_fsm_8;
    static const sc_lv<4> ap_ST_st10_fsm_9;
    static const sc_lv<4> ap_ST_st11_fsm_10;
    static const sc_lv<4> ap_ST_st12_fsm_11;
    static const sc_lv<4> ap_ST_st13_fsm_12;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<29> ap_const_lv29_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<256> ap_const_lv256_lc_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<29> ap_const_lv29_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_114();
    void thread_ap_sig_bdd_126();
    void thread_ap_sig_bdd_144();
    void thread_ap_sig_bdd_76();
    void thread_b1_address();
    void thread_b1_dataout();
    void thread_b1_req_din();
    void thread_b1_req_write();
    void thread_b1_rsp_read();
    void thread_b1_size();
    void thread_b2_address();
    void thread_b2_dataout();
    void thread_b2_req_din();
    void thread_b2_req_write();
    void thread_b2_rsp_read();
    void thread_b2_size();
    void thread_b3_address();
    void thread_b3_dataout();
    void thread_b3_req_din();
    void thread_b3_req_write();
    void thread_b3_rsp_read();
    void thread_b3_size();
    void thread_blockSize_ap_ack();
    void thread_exitcond1_fu_223_p2();
    void thread_exitcond_fu_259_p2();
    void thread_grp_fu_195_ce();
    void thread_grp_fu_195_p0();
    void thread_grp_fu_195_p1();
    void thread_i_1_fu_228_p2();
    void thread_i_2_fu_264_p2();
    void thread_tmp_10_fu_153_p0();
    void thread_tmp_10_fu_153_p2();
    void thread_tmp_11_fu_165_p0();
    void thread_tmp_11_fu_165_p2();
    void thread_tmp_12_fu_171_p0();
    void thread_tmp_12_fu_171_p2();
    void thread_tmp_13_fu_183_p0();
    void thread_tmp_13_fu_183_p2();
    void thread_tmp_1_fu_201_p1();
    void thread_tmp_2_fu_177_p2();
    void thread_tmp_3_fu_205_p1();
    void thread_tmp_4_fu_189_p2();
    void thread_tmp_5_fu_209_p1();
    void thread_tmp_7_fu_147_p0();
    void thread_tmp_7_fu_147_p2();
    void thread_tmp_8_fu_234_p1();
    void thread_tmp_9_fu_270_p1();
    void thread_tmp_fu_159_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
